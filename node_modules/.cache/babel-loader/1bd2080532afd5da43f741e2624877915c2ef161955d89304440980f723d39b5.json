{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\nimport { unauthenticatedHandler, getRetryDecider, parseJsonError, jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({\n  region\n}) => {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  const customURL = authConfig?.userPoolEndpoint;\n  const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n  return {\n    url: customURL ? new AmplifyUrl(customURL) : defaultURL\n  };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n  request.headers['cache-control'] = 'no-store';\n  return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  cache: 'no-store'\n};\n/**\n * @internal\n */\nconst getSharedHeaders = operation => ({\n  'content-type': 'application/x-amz-json-1.1',\n  'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`\n});\n/**\n * @internal\n */\nconst buildHttpRpcRequest = ({\n  url\n}, headers, body) => ({\n  headers,\n  url,\n  body,\n  method: 'POST'\n});\nexport { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders };","map":{"version":3,"names":["SERVICE_NAME","endpointResolver","region","authConfig","Amplify","getConfig","Auth","Cognito","customURL","userPoolEndpoint","defaultURL","AmplifyUrl","getDnsSuffix","url","disableCacheMiddleware","next","context","request","headers","cognitoUserPoolTransferHandler","composeTransferHandler","unauthenticatedHandler","defaultConfig","service","retryDecider","getRetryDecider","parseJsonError","computeDelay","jitteredBackoff","userAgentValue","getAmplifyUserAgent","cache","getSharedHeaders","operation","buildHttpRpcRequest","body","method"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\clients\\CognitoIdentityProvider\\base.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getDnsSuffix, unauthenticatedHandler, parseJsonError, getRetryDecider, jitteredBackoff, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent, AmplifyUrl, } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const customURL = authConfig?.userPoolEndpoint;\n    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n    return {\n        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n    };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n"],"mappings":";;;;;AAAA;AACA;AAKA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,aAAa;AAClC;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAM,CAAE,KAAK;EACrC,MAAMC,UAAU,GAAGC,OAAO,CAACC,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpD,MAAMC,SAAS,GAAGL,UAAU,EAAEM,gBAAgB;EAC9C,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAAE,WAAUX,YAAa,IAAGE,MAAO,IAAGU,YAAY,CAACV,MAAM,CAAE,EAAC,CAAC;EAC9F,OAAO;IACHW,GAAG,EAAEL,SAAS,GAAG,IAAIG,UAAU,CAACH,SAAS,CAAC,GAAGE;EACrD,CAAK;AACL,CAAC;AACD;AACA;AACA;AACA,MAAMI,sBAAsB,GAAGA,CAAA,KAAM,CAACC,IAAI,EAAEC,OAAO,KAAK,eAAeF,sBAAsBA,CAACG,OAAO,EAAE;EACnGA,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;EAC7C,OAAOH,IAAI,CAACE,OAAO,CAAC;AACxB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACY,MAACE,8BAA8B,GAAGC,sBAAsB,CAACC,sBAAsB,EAAE,CAACP,sBAAsB,CAAC;AACrH;AACA;AACA;AACY,MAACQ,aAAa,GAAG;EACzBC,OAAO,EAAEvB,YAAY;EACrBC,gBAAgB;EAChBuB,YAAY,EAAEC,eAAe,CAACC,cAAc,CAAC;EAC7CC,YAAY,EAAEC,eAAe;EAC7BC,cAAc,EAAEC,mBAAmB,EAAE;EACrCC,KAAK,EAAE;AACX;AACA;AACA;AACA;AACY,MAACC,gBAAgB,GAAIC,SAAS,KAAM;EAC5C,cAAc,EAAE,4BAA4B;EAC5C,cAAc,EAAG,qCAAoCA,SAAU;AACnE,CAAC;AACD;AACA;AACA;AACY,MAACC,mBAAmB,GAAGA,CAAC;EAAErB;AAAG,CAAE,EAAEK,OAAO,EAAEiB,IAAI,MAAM;EAC5DjB,OAAO;EACPL,GAAG;EACHsB,IAAI;EACJC,MAAM,EAAE;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}