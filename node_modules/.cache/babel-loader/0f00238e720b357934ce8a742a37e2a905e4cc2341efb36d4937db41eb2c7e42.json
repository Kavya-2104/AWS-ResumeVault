{"ast":null,"code":"import * as React from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { ARROW_UP, ARROW_DOWN, ENTER_KEY, ESCAPE_KEY } from '../shared/constants.mjs';\nimport { strHasLength } from '../shared/utils.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\nconst DEFAULT_KEYS = new Set([ARROW_DOWN, ARROW_UP, ENTER_KEY, ESCAPE_KEY]);\nconst useAutocomplete = ({\n  defaultValue = '',\n  value,\n  options,\n  optionFilter,\n  onBlur,\n  onChange,\n  onClear,\n  onClick,\n  onSelect,\n  onSubmit\n}) => {\n  const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = React.useState(defaultValue);\n  const composedValue = isControlled ? value : internalValue;\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [activeOption, setActiveOption] = React.useState(null);\n  const isCustomFiltering = isFunction(optionFilter);\n  const filteredOptions = React.useMemo(() => {\n    const defaultFilter = option => {\n      const {\n        label\n      } = option;\n      return label?.toLocaleLowerCase().includes(composedValue?.toLocaleLowerCase());\n    };\n    const filter = isCustomFiltering ? option => optionFilter(option, composedValue) : defaultFilter;\n    return options?.filter(filter) ?? [];\n  }, [composedValue, optionFilter, isCustomFiltering, options]);\n  const autocompleteId = useStableId();\n  const listboxId = useStableId();\n  const menuId = useStableId();\n  const optionBaseId = useStableId();\n  const activeIndex = filteredOptions.findIndex(option => option === activeOption);\n  const activeOptionId = activeOption?.id ?? (activeIndex !== -1 ? `${optionBaseId}-option-${activeIndex}` : undefined);\n  const handleOnBlur = React.useCallback(event => {\n    setIsMenuOpen(false);\n    setActiveOption(null);\n    if (isFunction(onBlur)) {\n      onBlur(event);\n    }\n  }, [onBlur]);\n  const handleOnChange = React.useCallback(event => {\n    setActiveOption(null);\n    setIsMenuOpen(true);\n    if (!isControlled) {\n      setInternalValue(event.target.value);\n    }\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n  }, [isControlled, onChange]);\n  const handleOnClear = React.useCallback(() => {\n    if (!isControlled) {\n      setInternalValue('');\n    }\n    if (isFunction(onClear)) {\n      onClear();\n    }\n  }, [isControlled, onClear]);\n  const handleOnClick = React.useCallback(event => {\n    setIsMenuOpen(true);\n    if (isFunction(onClick)) {\n      onClick(event);\n    }\n  }, [onClick]);\n  const handleOnKeyDown = event => {\n    const {\n      key\n    } = event;\n    if (!DEFAULT_KEYS.has(key)) {\n      return;\n    }\n    event.preventDefault();\n    switch (key) {\n      case ESCAPE_KEY:\n        {\n          if (isMenuOpen) {\n            setIsMenuOpen(false);\n            setActiveOption(null);\n          } else {\n            handleOnClear();\n          }\n          break;\n        }\n      case ENTER_KEY:\n        {\n          if (!activeOption) {\n            if (isFunction(onSubmit)) {\n              onSubmit(composedValue);\n            }\n          } else {\n            const {\n              label\n            } = activeOption;\n            if (!isControlled) {\n              setInternalValue(label);\n            }\n            if (isFunction(onSelect)) {\n              onSelect(activeOption);\n            }\n          }\n          setIsMenuOpen(false);\n          setActiveOption(null);\n          break;\n        }\n      case ARROW_DOWN:\n        {\n          if (filteredOptions.length <= 0) {\n            return;\n          }\n          setIsMenuOpen(true);\n          const newActiveIndex = activeIndex >= filteredOptions.length - 1 ? 0 : activeIndex + 1;\n          setActiveOption(filteredOptions[newActiveIndex]);\n          break;\n        }\n      case ARROW_UP:\n        {\n          if (filteredOptions.length <= 0) {\n            return;\n          }\n          setIsMenuOpen(true);\n          const newActiveIndex = activeIndex <= 0 ? filteredOptions.length - 1 : activeIndex - 1;\n          setActiveOption(filteredOptions[newActiveIndex]);\n        }\n    }\n  };\n  // The window will scroll down to the right place to show the whole menu\n  // if space is not enough in current viewport\n  React.useEffect(() => {\n    const autocompleteElement = document.getElementById(autocompleteId);\n    const menuElement = document.getElementById(menuId);\n    if (menuElement && isMenuOpen && autocompleteElement) {\n      const {\n        bottom\n      } = menuElement.getBoundingClientRect();\n      const {\n        offsetParent,\n        offsetTop\n      } = autocompleteElement;\n      if (offsetParent === document.body && bottom > document.documentElement.clientHeight) {\n        window.scrollTo({\n          top: Math.min(bottom - document.documentElement.clientHeight + window.scrollY + 20,\n          // Add 20 gap between menu bottom and window viewport bottom\n          offsetTop),\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [autocompleteId, isMenuOpen, menuId]);\n  // This will make the menu able to scroll with keyboard,\n  // and scroll each option into window viewport if necessary\n  React.useEffect(() => {\n    const listboxElement = document.getElementById(listboxId);\n    const activeOptionElement = strHasLength(activeOptionId) ? document.getElementById(activeOptionId) : null;\n    if (activeOptionElement && listboxElement) {\n      const {\n        scrollTop,\n        clientHeight\n      } = listboxElement;\n      const {\n        offsetHeight,\n        offsetTop\n      } = activeOptionElement;\n      const {\n        top,\n        bottom\n      } = activeOptionElement.getBoundingClientRect();\n      if (scrollTop > offsetTop) {\n        listboxElement.scrollTop = offsetTop;\n      }\n      if (scrollTop + clientHeight < offsetTop + offsetHeight) {\n        listboxElement.scrollTop = offsetTop + offsetHeight - clientHeight;\n      }\n      if (top < 0 || bottom > document.documentElement.clientHeight) {\n        activeOptionElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }, [activeOptionId, listboxId]);\n  return {\n    activeOptionId,\n    autocompleteId,\n    composedValue,\n    filteredOptions,\n    handleOnBlur,\n    handleOnClear,\n    handleOnClick,\n    handleOnChange,\n    handleOnKeyDown,\n    isControlled,\n    isCustomFiltering,\n    isMenuOpen,\n    listboxId,\n    menuId,\n    optionBaseId,\n    setActiveOption,\n    setIsMenuOpen,\n    setInternalValue\n  };\n};\nexport { useAutocomplete };","map":{"version":3,"names":["React","isFunction","ARROW_UP","ARROW_DOWN","ENTER_KEY","ESCAPE_KEY","strHasLength","useStableId","DEFAULT_KEYS","Set","useAutocomplete","defaultValue","value","options","optionFilter","onBlur","onChange","onClear","onClick","onSelect","onSubmit","isControlled","undefined","internalValue","setInternalValue","useState","composedValue","isMenuOpen","setIsMenuOpen","activeOption","setActiveOption","isCustomFiltering","filteredOptions","useMemo","defaultFilter","option","label","toLocaleLowerCase","includes","filter","autocompleteId","listboxId","menuId","optionBaseId","activeIndex","findIndex","activeOptionId","id","handleOnBlur","useCallback","event","handleOnChange","target","handleOnClear","handleOnClick","handleOnKeyDown","key","has","preventDefault","length","newActiveIndex","useEffect","autocompleteElement","document","getElementById","menuElement","bottom","getBoundingClientRect","offsetParent","offsetTop","body","documentElement","clientHeight","window","scrollTo","top","Math","min","scrollY","behavior","listboxElement","activeOptionElement","scrollTop","offsetHeight","scrollIntoView","block"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/useAutocomplete.mjs"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { ARROW_UP, ARROW_DOWN, ENTER_KEY, ESCAPE_KEY } from '../shared/constants.mjs';\nimport { strHasLength } from '../shared/utils.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\n\nconst DEFAULT_KEYS = new Set([ARROW_DOWN, ARROW_UP, ENTER_KEY, ESCAPE_KEY]);\nconst useAutocomplete = ({ defaultValue = '', value, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit, }) => {\n    const isControlled = value !== undefined;\n    const [internalValue, setInternalValue] = React.useState(defaultValue);\n    const composedValue = isControlled ? value : internalValue;\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n    const [activeOption, setActiveOption] = React.useState(null);\n    const isCustomFiltering = isFunction(optionFilter);\n    const filteredOptions = React.useMemo(() => {\n        const defaultFilter = (option) => {\n            const { label } = option;\n            return label\n                ?.toLocaleLowerCase()\n                .includes(composedValue?.toLocaleLowerCase());\n        };\n        const filter = isCustomFiltering\n            ? (option) => optionFilter(option, composedValue)\n            : defaultFilter;\n        return options?.filter(filter) ?? [];\n    }, [composedValue, optionFilter, isCustomFiltering, options]);\n    const autocompleteId = useStableId();\n    const listboxId = useStableId();\n    const menuId = useStableId();\n    const optionBaseId = useStableId();\n    const activeIndex = filteredOptions.findIndex((option) => option === activeOption);\n    const activeOptionId = activeOption?.id ??\n        (activeIndex !== -1 ? `${optionBaseId}-option-${activeIndex}` : undefined);\n    const handleOnBlur = React.useCallback((event) => {\n        setIsMenuOpen(false);\n        setActiveOption(null);\n        if (isFunction(onBlur)) {\n            onBlur(event);\n        }\n    }, [onBlur]);\n    const handleOnChange = React.useCallback((event) => {\n        setActiveOption(null);\n        setIsMenuOpen(true);\n        if (!isControlled) {\n            setInternalValue(event.target.value);\n        }\n        if (isFunction(onChange)) {\n            onChange(event);\n        }\n    }, [isControlled, onChange]);\n    const handleOnClear = React.useCallback(() => {\n        if (!isControlled) {\n            setInternalValue('');\n        }\n        if (isFunction(onClear)) {\n            onClear();\n        }\n    }, [isControlled, onClear]);\n    const handleOnClick = React.useCallback((event) => {\n        setIsMenuOpen(true);\n        if (isFunction(onClick)) {\n            onClick(event);\n        }\n    }, [onClick]);\n    const handleOnKeyDown = (event) => {\n        const { key } = event;\n        if (!DEFAULT_KEYS.has(key)) {\n            return;\n        }\n        event.preventDefault();\n        switch (key) {\n            case ESCAPE_KEY: {\n                if (isMenuOpen) {\n                    setIsMenuOpen(false);\n                    setActiveOption(null);\n                }\n                else {\n                    handleOnClear();\n                }\n                break;\n            }\n            case ENTER_KEY: {\n                if (!activeOption) {\n                    if (isFunction(onSubmit)) {\n                        onSubmit(composedValue);\n                    }\n                }\n                else {\n                    const { label } = activeOption;\n                    if (!isControlled) {\n                        setInternalValue(label);\n                    }\n                    if (isFunction(onSelect)) {\n                        onSelect(activeOption);\n                    }\n                }\n                setIsMenuOpen(false);\n                setActiveOption(null);\n                break;\n            }\n            case ARROW_DOWN: {\n                if (filteredOptions.length <= 0) {\n                    return;\n                }\n                setIsMenuOpen(true);\n                const newActiveIndex = activeIndex >= filteredOptions.length - 1 ? 0 : activeIndex + 1;\n                setActiveOption(filteredOptions[newActiveIndex]);\n                break;\n            }\n            case ARROW_UP: {\n                if (filteredOptions.length <= 0) {\n                    return;\n                }\n                setIsMenuOpen(true);\n                const newActiveIndex = activeIndex <= 0 ? filteredOptions.length - 1 : activeIndex - 1;\n                setActiveOption(filteredOptions[newActiveIndex]);\n            }\n        }\n    };\n    // The window will scroll down to the right place to show the whole menu\n    // if space is not enough in current viewport\n    React.useEffect(() => {\n        const autocompleteElement = document.getElementById(autocompleteId);\n        const menuElement = document.getElementById(menuId);\n        if (menuElement && isMenuOpen && autocompleteElement) {\n            const { bottom } = menuElement.getBoundingClientRect();\n            const { offsetParent, offsetTop } = autocompleteElement;\n            if (offsetParent === document.body &&\n                bottom > document.documentElement.clientHeight) {\n                window.scrollTo({\n                    top: Math.min(bottom -\n                        document.documentElement.clientHeight +\n                        window.scrollY +\n                        20, // Add 20 gap between menu bottom and window viewport bottom\n                    offsetTop),\n                    behavior: 'smooth',\n                });\n            }\n        }\n    }, [autocompleteId, isMenuOpen, menuId]);\n    // This will make the menu able to scroll with keyboard,\n    // and scroll each option into window viewport if necessary\n    React.useEffect(() => {\n        const listboxElement = document.getElementById(listboxId);\n        const activeOptionElement = strHasLength(activeOptionId)\n            ? document.getElementById(activeOptionId)\n            : null;\n        if (activeOptionElement && listboxElement) {\n            const { scrollTop, clientHeight } = listboxElement;\n            const { offsetHeight, offsetTop } = activeOptionElement;\n            const { top, bottom } = activeOptionElement.getBoundingClientRect();\n            if (scrollTop > offsetTop) {\n                listboxElement.scrollTop = offsetTop;\n            }\n            if (scrollTop + clientHeight < offsetTop + offsetHeight) {\n                listboxElement.scrollTop = offsetTop + offsetHeight - clientHeight;\n            }\n            if (top < 0 || bottom > document.documentElement.clientHeight) {\n                activeOptionElement.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'nearest',\n                });\n            }\n        }\n    }, [activeOptionId, listboxId]);\n    return {\n        activeOptionId,\n        autocompleteId,\n        composedValue,\n        filteredOptions,\n        handleOnBlur,\n        handleOnClear,\n        handleOnClick,\n        handleOnChange,\n        handleOnKeyDown,\n        isControlled,\n        isCustomFiltering,\n        isMenuOpen,\n        listboxId,\n        menuId,\n        optionBaseId,\n        setActiveOption,\n        setIsMenuOpen,\n        setInternalValue,\n    };\n};\n\nexport { useAutocomplete };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}