{"ast":null,"code":"import { objectKeys } from '../utils.mjs';\n\n// Inspiration for getMediaQueries and useBreakpoint\nconst getMediaQueries = ({\n  breakpoints\n}) => {\n  const sortedBreakpoints = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);\n  return sortedBreakpoints.map((breakpoint, index) => {\n    let query = '';\n    const minWidth = breakpoints[breakpoint];\n    const nextBreakpoint = sortedBreakpoints[index - 1];\n    const maxWidth = nextBreakpoint ? breakpoints[nextBreakpoint] - 1 : null;\n    if (minWidth >= 0) {\n      query = `(min-width: ${minWidth}px)`;\n    }\n    if (maxWidth !== null) {\n      if (query) {\n        query += ' and ';\n      }\n      query += `(max-width: ${maxWidth}px)`;\n    }\n    return {\n      breakpoint,\n      query,\n      maxWidth,\n      minWidth\n    };\n  });\n};\nexport { getMediaQueries };","map":{"version":3,"names":["objectKeys","getMediaQueries","breakpoints","sortedBreakpoints","sort","a","b","map","breakpoint","index","query","minWidth","nextBreakpoint","maxWidth"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/getMediaQueries.mjs"],"sourcesContent":["import { objectKeys } from '../utils.mjs';\n\n// Inspiration for getMediaQueries and useBreakpoint\nconst getMediaQueries = ({ breakpoints }) => {\n    const sortedBreakpoints = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);\n    return sortedBreakpoints.map((breakpoint, index) => {\n        let query = '';\n        const minWidth = breakpoints[breakpoint];\n        const nextBreakpoint = sortedBreakpoints[index - 1];\n        const maxWidth = nextBreakpoint ? breakpoints[nextBreakpoint] - 1 : null;\n        if (minWidth >= 0) {\n            query = `(min-width: ${minWidth}px)`;\n        }\n        if (maxWidth !== null) {\n            if (query) {\n                query += ' and ';\n            }\n            query += `(max-width: ${maxWidth}px)`;\n        }\n        return {\n            breakpoint,\n            query,\n            maxWidth,\n            minWidth,\n        };\n    });\n};\n\nexport { getMediaQueries };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;;AAEzC;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACzC,MAAMC,iBAAiB,GAAGH,UAAU,CAACE,WAAW,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKJ,WAAW,CAACI,CAAC,CAAC,GAAGJ,WAAW,CAACG,CAAC,CAAC,CAAC;EACjG,OAAOF,iBAAiB,CAACI,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;IAChD,IAAIC,KAAK,GAAG,EAAE;IACd,MAAMC,QAAQ,GAAGT,WAAW,CAACM,UAAU,CAAC;IACxC,MAAMI,cAAc,GAAGT,iBAAiB,CAACM,KAAK,GAAG,CAAC,CAAC;IACnD,MAAMI,QAAQ,GAAGD,cAAc,GAAGV,WAAW,CAACU,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI;IACxE,IAAID,QAAQ,IAAI,CAAC,EAAE;MACfD,KAAK,GAAI,eAAcC,QAAS,KAAI;IACxC;IACA,IAAIE,QAAQ,KAAK,IAAI,EAAE;MACnB,IAAIH,KAAK,EAAE;QACPA,KAAK,IAAI,OAAO;MACpB;MACAA,KAAK,IAAK,eAAcG,QAAS,KAAI;IACzC;IACA,OAAO;MACHL,UAAU;MACVE,KAAK;MACLG,QAAQ;MACRF;IACJ,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,SAASV,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}