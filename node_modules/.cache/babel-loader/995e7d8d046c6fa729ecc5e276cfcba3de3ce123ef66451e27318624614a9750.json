{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = payloadAccessor => {\n  let cached;\n  return () => {\n    if (!cached) {\n      // Explicitly not awaiting. Intermediate await would add overhead and\n      // introduce a possible race in the event that this wrapper is called\n      // again before the first `payloadAccessor` call resolves.\n      cached = payloadAccessor();\n    }\n    return cached;\n  };\n};\nexport { withMemoization };","map":{"version":3,"names":["withMemoization","payloadAccessor","cached"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\clients\\utils\\memoization.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nexport const withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,eAAe,GAAIC,eAAe,IAAK;EAChD,IAAIC,MAAM;EACV,OAAO,MAAM;IACT,IAAI,CAACA,MAAM,EAAE;MACrB;MACA;MACA;MACYA,MAAM,GAAGD,eAAe,EAAE;IACtC;IACQ,OAAOC,MAAM;EACrB,CAAK;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}