{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\nimport { copy as copy$1 } from './internal/copy.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n * different level or identityId (if source object's level is 'protected').\n *\n * @param input - The CopyInput object.\n * @returns Output containing the destination key.\n * @throws service: {@link S3Exception} - Thrown when checking for existence of the object\n * @throws validation: {@link StorageValidationErrorCode } - Thrown when\n * source or destination key are not defined.\n */\nconst copy = async input => {\n  return copy$1(Amplify, input);\n};\nexport { copy };","map":{"version":3,"names":["copy","input","copy$1","Amplify"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\copy.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { copy as copyInternal } from './internal/copy';\n/**\n * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n * different level or identityId (if source object's level is 'protected').\n *\n * @param input - The CopyInput object.\n * @returns Output containing the destination key.\n * @throws service: {@link S3Exception} - Thrown when checking for existence of the object\n * @throws validation: {@link StorageValidationErrorCode } - Thrown when\n * source or destination key are not defined.\n */\nexport const copy = async (input) => {\n    return copyInternal(Amplify, input);\n};\n"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,IAAI,GAAG,MAAOC,KAAK,IAAK;EACjC,OAAOC,MAAY,CAACC,OAAO,EAAEF,KAAK,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}