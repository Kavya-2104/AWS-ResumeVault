{"ast":null,"code":"import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async state => {\n  const savedState = await oAuthStore.loadOAuthState();\n  // This is because savedState only exists if the flow was initiated by Amplify\n  const validatedState = state === savedState ? savedState : undefined;\n  if (!validatedState) {\n    throw new AuthError({\n      name: AuthErrorTypes.OAuthSignInError,\n      message: state === null ? flowCancelledMessage : validationFailedMessage,\n      recoverySuggestion: state === null ? undefined : validationRecoverySuggestion\n    });\n  }\n  return validatedState;\n};\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };","map":{"version":3,"names":["flowCancelledMessage","validationFailedMessage","validationRecoverySuggestion","validateState","state","savedState","oAuthStore","loadOAuthState","validatedState","undefined","AuthError","name","AuthErrorTypes","OAuthSignInError","message","recoverySuggestion"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\oauth\\validateState.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../../types/Auth';\nimport { oAuthStore } from './oAuthStore';\nexport const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nexport const validationFailedMessage = 'An error occurred while validating the state.';\nexport const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nexport const validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,oBAAoB,GAAG;AACxB,MAACC,uBAAuB,GAAG;AAC3B,MAACC,4BAA4B,GAAG;AAChC,MAACC,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC1C,MAAMC,UAAU,GAAG,MAAMC,UAAU,CAACC,cAAc,EAAE;EACxD;EACI,MAAMC,cAAc,GAAGJ,KAAK,KAAKC,UAAU,GAAGA,UAAU,GAAGI,SAAS;EACpE,IAAI,CAACD,cAAc,EAAE;IACjB,MAAM,IAAIE,SAAS,CAAC;MAChBC,IAAI,EAAEC,cAAc,CAACC,gBAAgB;MACrCC,OAAO,EAAEV,KAAK,KAAK,IAAI,GAAGJ,oBAAoB,GAAGC,uBAAuB;MACxEc,kBAAkB,EAAEX,KAAK,KAAK,IAAI,GAAGK,SAAS,GAAGP;IAC7D,CAAS,CAAC;EACV;EACI,OAAOM,cAAc;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}