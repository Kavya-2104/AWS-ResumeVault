{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSC-PROJECT\\\\amplify-react-app\\\\src\\\\UploadPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPDF() {\n  _s();\n  const [studentID, setStudentID] = useState('');\n  const [pdfFile, setPDFFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleUpload = () => {\n    if (!studentID || !pdfFile) {\n      setMessage('Please provide both Student ID and select a PDF file.');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = function (event) {\n      const fileData = event.target.result;\n      const params = {\n        ID: studentID,\n        fileName: pdfFile.name,\n        fileData: fileData\n      };\n      invokeLambdaFunction(params);\n    };\n    reader.readAsDataURL(pdfFile);\n  };\n  const invokeLambdaFunction = params => {\n    const apiGatewayUrl = 'https://2iwjhqhn3m.execute-api.us-east-1.amazonaws.com/meow';\n    fetch(apiGatewayUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Data uploaded successfully. Response: \", data);\n      setMessage(\"Data uploaded successfully!\");\n    }).catch(error => {\n      console.error(\"Error uploading data: \", error);\n      setMessage(\"Error uploading data!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentID\",\n        children: \"Student ID   : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"studentID\",\n        name: \"studentID\",\n        value: studentID,\n        onChange: e => setStudentID(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pdfFile\",\n        children: \"Select PDF   : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"pdfFile\",\n        name: \"pdfFile\",\n        accept: \".pdf\",\n        onChange: e => setPDFFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPDF, \"mzyaPXysr3neq0FjnIFkfVMChig=\");\n_c = UploadPDF;\nexport default UploadPDF;\nvar _c;\n$RefreshReg$(_c, \"UploadPDF\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPDF","_s","studentID","setStudentID","pdfFile","setPDFFile","message","setMessage","handleUpload","reader","FileReader","onload","event","fileData","target","result","params","ID","fileName","name","invokeLambdaFunction","readAsDataURL","apiGatewayUrl","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","children","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","required","accept","files","onClick","_c","$RefreshReg$"],"sources":["E:/CSC-PROJECT/amplify-react-app/src/UploadPDF.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction UploadPDF() {\r\n  const [studentID, setStudentID] = useState('');\r\n  const [pdfFile, setPDFFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleUpload = () => {\r\n    if (!studentID || !pdfFile) {\r\n      setMessage('Please provide both Student ID and select a PDF file.');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = function(event) {\r\n      const fileData = event.target.result;\r\n      const params = {\r\n        ID: studentID,\r\n        fileName: pdfFile.name,\r\n        fileData: fileData\r\n      };\r\n      invokeLambdaFunction(params);\r\n    };\r\n    reader.readAsDataURL(pdfFile);\r\n  };\r\n\r\n  const invokeLambdaFunction = (params) => {\r\n    const apiGatewayUrl = 'https://2iwjhqhn3m.execute-api.us-east-1.amazonaws.com/meow';\r\n\r\n    fetch(apiGatewayUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(params),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(\"Data uploaded successfully. Response: \", data);\r\n      setMessage(\"Data uploaded successfully!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error uploading data: \", error);\r\n      setMessage(\"Error uploading data!\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload PDF</h1>\r\n      <form>\r\n        <label htmlFor=\"studentID\">Student ID   : </label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"studentID\" \r\n          name=\"studentID\" \r\n          value={studentID} \r\n          onChange={(e) => setStudentID(e.target.value)} \r\n          required \r\n        /><br/><br/>\r\n        \r\n        <label htmlFor=\"pdfFile\">Select PDF   : </label>\r\n        <input \r\n          type=\"file\" \r\n          id=\"pdfFile\" \r\n          name=\"pdfFile\" \r\n          accept=\".pdf\" \r\n          onChange={(e) => setPDFFile(e.target.files[0])} \r\n          required \r\n        /><br/><br/>\r\n\r\n        <button type=\"button\" onClick={handleUpload}>Upload</button>\r\n      </form>\r\n      <div id=\"message\">{message}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPDF;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}