{"ast":null,"code":"import { from, Observable } from 'rxjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport { isWebWorker } from '../utils/isWebWorker.mjs';\nimport '../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass Reachability {\n  networkMonitor(_) {\n    const globalObj = isWebWorker() ? self : typeof window !== 'undefined' && window;\n    if (!globalObj) {\n      return from([{\n        online: true\n      }]);\n    }\n    return new Observable(observer => {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n      const notifyOnline = () => observer.next({\n        online: true\n      });\n      const notifyOffline = () => observer.next({\n        online: false\n      });\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n      Reachability._observers.push(observer);\n      return () => {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n      };\n    });\n  }\n  // expose observers to simulate offline mode for integration testing\n  static _observerOverride(status) {\n    for (const observer of this._observers) {\n      if (observer.closed) {\n        this._observers = this._observers.filter(_observer => _observer !== observer);\n        continue;\n      }\n      observer?.next && observer.next(status);\n    }\n  }\n}\nReachability._observers = [];\nexport { Reachability };","map":{"version":3,"names":["Reachability","networkMonitor","_","globalObj","isWebWorker","self","window","from","online","Observable","observer","next","navigator","onLine","notifyOnline","notifyOffline","addEventListener","_observers","push","removeEventListener","filter","_observer","_observerOverride","status","closed"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\Reachability\\Reachability.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Observable, from } from 'rxjs';\nimport { isWebWorker } from '../utils';\nclass Reachability {\n    networkMonitor(_) {\n        const globalObj = isWebWorker()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return from([{ online: true }]);\n        }\n        return new Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => observer.next({ online: true });\n            const notifyOffline = () => observer.next({ online: false });\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nReachability._observers = [];\nexport { Reachability };\n"],"mappings":";;;;;AAAA;AACA;AAGA,MAAMA,YAAY,CAAC;EACfC,cAAcA,CAACC,CAAC,EAAE;IACd,MAAMC,SAAS,GAAGC,WAAW,EAAE,GACzBC,IAAI,GACJ,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM;IAC7C,IAAI,CAACH,SAAS,EAAE;MACZ,OAAOI,IAAI,CAAC,CAAC;QAAEC,MAAM,EAAE;MAAI,CAAE,CAAC,CAAC;IAC3C;IACQ,OAAO,IAAIC,UAAU,CAACC,QAAQ,IAAI;MAC9BA,QAAQ,CAACC,IAAI,CAAC;QAAEH,MAAM,EAAEL,SAAS,CAACS,SAAS,CAACC;MAAM,CAAE,CAAC;MACrD,MAAMC,YAAY,GAAGA,CAAA,KAAMJ,QAAQ,CAACC,IAAI,CAAC;QAAEH,MAAM,EAAE;MAAI,CAAE,CAAC;MAC1D,MAAMO,aAAa,GAAGA,CAAA,KAAML,QAAQ,CAACC,IAAI,CAAC;QAAEH,MAAM,EAAE;MAAK,CAAE,CAAC;MAC5DL,SAAS,CAACa,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;MAClDX,SAAS,CAACa,gBAAgB,CAAC,SAAS,EAAED,aAAa,CAAC;MACpDf,YAAY,CAACiB,UAAU,CAACC,IAAI,CAACR,QAAQ,CAAC;MACtC,OAAO,MAAM;QACTP,SAAS,CAACgB,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;QACrDX,SAAS,CAACgB,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;QACvDf,YAAY,CAACiB,UAAU,GAAGjB,YAAY,CAACiB,UAAU,CAACG,MAAM,CAACC,SAAS,IAAIA,SAAS,KAAKX,QAAQ,CAAC;MAC7G,CAAa;IACb,CAAS,CAAC;EACV;EACA;EACI,OAAOY,iBAAiBA,CAACC,MAAM,EAAE;IAC7B,KAAK,MAAMb,QAAQ,IAAI,IAAI,CAACO,UAAU,EAAE;MACpC,IAAIP,QAAQ,CAACc,MAAM,EAAE;QACjB,IAAI,CAACP,UAAU,GAAG,IAAI,CAACA,UAAU,CAACG,MAAM,CAACC,SAAS,IAAIA,SAAS,KAAKX,QAAQ,CAAC;QAC7E;MAChB;MACYA,QAAQ,EAAEC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACY,MAAM,CAAC;IACnD;EACA;AACA;AACAvB,YAAY,CAACiB,UAAU,GAAG,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}