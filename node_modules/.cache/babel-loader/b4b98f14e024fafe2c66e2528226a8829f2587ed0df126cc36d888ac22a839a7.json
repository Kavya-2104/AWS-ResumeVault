{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nclass Mutex {\n  constructor() {\n    this._queue = [];\n    this._pending = false;\n  }\n  isLocked() {\n    return this._pending;\n  }\n  acquire() {\n    const ticket = new Promise(resolve => this._queue.push(resolve));\n    if (!this._pending) {\n      this._dispatchNext();\n    }\n    return ticket;\n  }\n  runExclusive(callback) {\n    return this.acquire().then(release => {\n      let result;\n      try {\n        result = callback();\n      } catch (e) {\n        release();\n        throw e;\n      }\n      return Promise.resolve(result).then(x => {\n        release();\n        return x;\n      }, e => {\n        release();\n        throw e;\n      });\n    });\n  }\n  _dispatchNext() {\n    if (this._queue.length > 0) {\n      this._pending = true;\n      this._queue.shift()(this._dispatchNext.bind(this));\n    } else {\n      this._pending = false;\n    }\n  }\n}\nexport { Mutex };","map":{"version":3,"names":["Mutex","constructor","_queue","_pending","isLocked","acquire","ticket","Promise","resolve","push","_dispatchNext","runExclusive","callback","then","release","result","e","x","length","shift","bind"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\Mutex\\Mutex.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport class Mutex {\n    constructor() {\n        this._queue = [];\n        this._pending = false;\n    }\n    isLocked() {\n        return this._pending;\n    }\n    acquire() {\n        const ticket = new Promise(resolve => this._queue.push(resolve));\n        if (!this._pending) {\n            this._dispatchNext();\n        }\n        return ticket;\n    }\n    runExclusive(callback) {\n        return this.acquire().then(release => {\n            let result;\n            try {\n                result = callback();\n            }\n            catch (e) {\n                release();\n                throw e;\n            }\n            return Promise.resolve(result).then((x) => {\n                release();\n                return x;\n            }, e => {\n                release();\n                throw e;\n            });\n        });\n    }\n    _dispatchNext() {\n        if (this._queue.length > 0) {\n            this._pending = true;\n            this._queue.shift()(this._dispatchNext.bind(this));\n        }\n        else {\n            this._pending = false;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,KAAK,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAG,KAAK;EAC7B;EACIC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,QAAQ;EAC5B;EACIE,OAAOA,CAAA,EAAG;IACN,MAAMC,MAAM,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAI,IAAI,CAACN,MAAM,CAACO,IAAI,CAACD,OAAO,CAAC,CAAC;IAChE,IAAI,CAAC,IAAI,CAACL,QAAQ,EAAE;MAChB,IAAI,CAACO,aAAa,EAAE;IAChC;IACQ,OAAOJ,MAAM;EACrB;EACIK,YAAYA,CAACC,QAAQ,EAAE;IACnB,OAAO,IAAI,CAACP,OAAO,EAAE,CAACQ,IAAI,CAACC,OAAO,IAAI;MAClC,IAAIC,MAAM;MACV,IAAI;QACAA,MAAM,GAAGH,QAAQ,EAAE;MACnC,CAAa,CACD,OAAOI,CAAC,EAAE;QACNF,OAAO,EAAE;QACT,MAAME,CAAC;MACvB;MACY,OAAOT,OAAO,CAACC,OAAO,CAACO,MAAM,CAAC,CAACF,IAAI,CAAEI,CAAC,IAAK;QACvCH,OAAO,EAAE;QACT,OAAOG,CAAC;MACxB,CAAa,EAAED,CAAC,IAAI;QACJF,OAAO,EAAE;QACT,MAAME,CAAC;MACvB,CAAa,CAAC;IACd,CAAS,CAAC;EACV;EACIN,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACR,MAAM,CAACgB,MAAM,GAAG,CAAC,EAAE;MACxB,IAAI,CAACf,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACD,MAAM,CAACiB,KAAK,EAAE,CAAC,IAAI,CAACT,aAAa,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAS,MACI;MACD,IAAI,CAACjB,QAAQ,GAAG,KAAK;IACjC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}