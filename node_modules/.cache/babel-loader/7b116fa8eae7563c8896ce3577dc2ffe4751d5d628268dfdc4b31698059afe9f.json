{"ast":null,"code":"import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { deleteUserAttributes as deleteUserAttributes$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUserAttributes(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userAttributeKeys\n  } = input;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  await deleteUserAttributes$1({\n    region: getRegion(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    UserAttributeNames: userAttributeKeys\n  });\n}\nexport { deleteUserAttributes };","map":{"version":3,"names":["deleteUserAttributes","input","authConfig","Amplify","getConfig","Auth","Cognito","assertTokenProviderConfig","userAttributeKeys","tokens","fetchAuthSession","forceRefresh","assertAuthTokens","deleteUserAttributes$1","region","getRegion","userPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","DeleteUserAttributes","AccessToken","accessToken","toString","UserAttributeNames"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\apis\\deleteUserAttributes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction, } from '@aws-amplify/core/internals/utils';\nimport { deleteUserAttributes as deleteUserAttributesClient } from '../utils/clients/CognitoIdentityProvider';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function deleteUserAttributes(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userAttributeKeys } = input;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    await deleteUserAttributesClient({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserAttributeNames: userAttributeKeys,\n    });\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,oBAAoBA,CAACC,KAAK,EAAE;EAC9C,MAAMC,UAAU,GAAGC,OAAO,CAACC,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACL,UAAU,CAAC;EACrC,MAAM;IAAEM;EAAiB,CAAE,GAAGP,KAAK;EACnC,MAAM;IAAEQ;EAAM,CAAE,GAAG,MAAMC,gBAAgB,CAAC;IAAEC,YAAY,EAAE;EAAK,CAAE,CAAC;EAClEC,gBAAgB,CAACH,MAAM,CAAC;EACxB,MAAMI,sBAA0B,CAAC;IAC7BC,MAAM,EAAEC,SAAS,CAACb,UAAU,CAACc,UAAU,CAAC;IACxCC,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,oBAAoB;EAC7E,CAAK,EAAE;IACCC,WAAW,EAAEZ,MAAM,CAACa,WAAW,CAACC,QAAQ,EAAE;IAC1CC,kBAAkB,EAAEhB;EAC5B,CAAK,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}