{"ast":null,"code":"import * as React from 'react';\nimport { Hub } from '@aws-amplify/core';\nimport { getCurrentUser } from 'aws-amplify/auth';\n\n/**\n * Amplify Auth React hook\n * @internal\n */\nconst useAuth = () => {\n  const [result, setResult] = React.useState({\n    error: undefined,\n    isLoading: true,\n    user: undefined\n  });\n  /**\n   * Hub events like `tokenRefresh` will not give back the user object.\n   * This util will be used to get current user after those events.\n   */\n  const fetchCurrentUser = React.useCallback(async () => {\n    setResult(prevResult => ({\n      ...prevResult,\n      isLoading: true\n    }));\n    try {\n      const user = await getCurrentUser();\n      setResult({\n        user,\n        isLoading: false\n      });\n    } catch (e) {\n      const error = e;\n      setResult({\n        error,\n        isLoading: false\n      });\n    }\n  }, []);\n  const handleAuth = React.useCallback(({\n    payload\n  }) => {\n    switch (payload.event) {\n      // success events\n      case 'signedIn':\n      case 'signUp':\n      case 'autoSignIn':\n        {\n          setResult({\n            user: payload.data,\n            isLoading: false\n          });\n          break;\n        }\n      case 'signedOut':\n        {\n          setResult({\n            user: undefined,\n            isLoading: false\n          });\n          break;\n        }\n      // failure events\n      case 'tokenRefresh_failure':\n      case 'signIn_failure':\n        {\n          setResult({\n            error: payload.data,\n            isLoading: false\n          });\n          break;\n        }\n      case 'autoSignIn_failure':\n        {\n          // autoSignIn just returns error message. Wrap it to an Error object\n          setResult({\n            error: new Error(payload.message),\n            isLoading: false\n          });\n          break;\n        }\n      // events that need another fetch\n      case 'tokenRefresh':\n        {\n          fetchCurrentUser();\n          break;\n        }\n    }\n  }, [fetchCurrentUser]);\n  React.useEffect(() => {\n    const unsubscribe = Hub.listen('auth', handleAuth, 'useAuth');\n    fetchCurrentUser(); // on init, see if user is already logged in\n    return unsubscribe;\n  }, [handleAuth, fetchCurrentUser]);\n  return {\n    ...result,\n    /** @deprecated Fetch is handled automatically, do not use this directly */\n    fetch: fetchCurrentUser\n  };\n};\nexport { useAuth };","map":{"version":3,"names":["React","Hub","getCurrentUser","useAuth","result","setResult","useState","error","undefined","isLoading","user","fetchCurrentUser","useCallback","prevResult","e","handleAuth","payload","event","data","Error","message","useEffect","unsubscribe","listen","fetch"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/hooks/useAuth.mjs"],"sourcesContent":["import * as React from 'react';\nimport { Hub } from '@aws-amplify/core';\nimport { getCurrentUser } from 'aws-amplify/auth';\n\n/**\n * Amplify Auth React hook\n * @internal\n */\nconst useAuth = () => {\n    const [result, setResult] = React.useState({\n        error: undefined,\n        isLoading: true,\n        user: undefined,\n    });\n    /**\n     * Hub events like `tokenRefresh` will not give back the user object.\n     * This util will be used to get current user after those events.\n     */\n    const fetchCurrentUser = React.useCallback(async () => {\n        setResult((prevResult) => ({ ...prevResult, isLoading: true }));\n        try {\n            const user = await getCurrentUser();\n            setResult({ user, isLoading: false });\n        }\n        catch (e) {\n            const error = e;\n            setResult({ error, isLoading: false });\n        }\n    }, []);\n    const handleAuth = React.useCallback(({ payload }) => {\n        switch (payload.event) {\n            // success events\n            case 'signedIn':\n            case 'signUp':\n            case 'autoSignIn': {\n                setResult({ user: payload.data, isLoading: false });\n                break;\n            }\n            case 'signedOut': {\n                setResult({ user: undefined, isLoading: false });\n                break;\n            }\n            // failure events\n            case 'tokenRefresh_failure':\n            case 'signIn_failure': {\n                setResult({ error: payload.data, isLoading: false });\n                break;\n            }\n            case 'autoSignIn_failure': {\n                // autoSignIn just returns error message. Wrap it to an Error object\n                setResult({ error: new Error(payload.message), isLoading: false });\n                break;\n            }\n            // events that need another fetch\n            case 'tokenRefresh': {\n                fetchCurrentUser();\n                break;\n            }\n        }\n    }, [fetchCurrentUser]);\n    React.useEffect(() => {\n        const unsubscribe = Hub.listen('auth', handleAuth, 'useAuth');\n        fetchCurrentUser(); // on init, see if user is already logged in\n        return unsubscribe;\n    }, [handleAuth, fetchCurrentUser]);\n    return {\n        ...result,\n        /** @deprecated Fetch is handled automatically, do not use this directly */\n        fetch: fetchCurrentUser,\n    };\n};\n\nexport { useAuth };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC;IACvCC,KAAK,EAAEC,SAAS;IAChBC,SAAS,EAAE,IAAI;IACfC,IAAI,EAAEF;EACV,CAAC,CAAC;EACF;AACJ;AACA;AACA;EACI,MAAMG,gBAAgB,GAAGX,KAAK,CAACY,WAAW,CAAC,YAAY;IACnDP,SAAS,CAAEQ,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAEJ,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC;IAC/D,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMR,cAAc,CAAC,CAAC;MACnCG,SAAS,CAAC;QAAEK,IAAI;QAAED,SAAS,EAAE;MAAM,CAAC,CAAC;IACzC,CAAC,CACD,OAAOK,CAAC,EAAE;MACN,MAAMP,KAAK,GAAGO,CAAC;MACfT,SAAS,CAAC;QAAEE,KAAK;QAAEE,SAAS,EAAE;MAAM,CAAC,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,UAAU,GAAGf,KAAK,CAACY,WAAW,CAAC,CAAC;IAAEI;EAAQ,CAAC,KAAK;IAClD,QAAQA,OAAO,CAACC,KAAK;MACjB;MACA,KAAK,UAAU;MACf,KAAK,QAAQ;MACb,KAAK,YAAY;QAAE;UACfZ,SAAS,CAAC;YAAEK,IAAI,EAAEM,OAAO,CAACE,IAAI;YAAET,SAAS,EAAE;UAAM,CAAC,CAAC;UACnD;QACJ;MACA,KAAK,WAAW;QAAE;UACdJ,SAAS,CAAC;YAAEK,IAAI,EAAEF,SAAS;YAAEC,SAAS,EAAE;UAAM,CAAC,CAAC;UAChD;QACJ;MACA;MACA,KAAK,sBAAsB;MAC3B,KAAK,gBAAgB;QAAE;UACnBJ,SAAS,CAAC;YAAEE,KAAK,EAAES,OAAO,CAACE,IAAI;YAAET,SAAS,EAAE;UAAM,CAAC,CAAC;UACpD;QACJ;MACA,KAAK,oBAAoB;QAAE;UACvB;UACAJ,SAAS,CAAC;YAAEE,KAAK,EAAE,IAAIY,KAAK,CAACH,OAAO,CAACI,OAAO,CAAC;YAAEX,SAAS,EAAE;UAAM,CAAC,CAAC;UAClE;QACJ;MACA;MACA,KAAK,cAAc;QAAE;UACjBE,gBAAgB,CAAC,CAAC;UAClB;QACJ;IACJ;EACJ,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EACtBX,KAAK,CAACqB,SAAS,CAAC,MAAM;IAClB,MAAMC,WAAW,GAAGrB,GAAG,CAACsB,MAAM,CAAC,MAAM,EAAER,UAAU,EAAE,SAAS,CAAC;IAC7DJ,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACpB,OAAOW,WAAW;EACtB,CAAC,EAAE,CAACP,UAAU,EAAEJ,gBAAgB,CAAC,CAAC;EAClC,OAAO;IACH,GAAGP,MAAM;IACT;IACAoB,KAAK,EAAEb;EACX,CAAC;AACL,CAAC;AAED,SAASR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}