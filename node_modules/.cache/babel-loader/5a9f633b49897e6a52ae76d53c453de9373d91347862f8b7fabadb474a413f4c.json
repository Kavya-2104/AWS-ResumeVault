{"ast":null,"code":"import { getHashedPayload } from '@aws-amplify/core/internals/aws-client-utils';\nimport { CONTENT_SHA256_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A middleware that adds the x-amz-content-sha256 header to the request if it is not already present.\n * It's required for S3 requests in browsers where the request body is sent in 1 chunk.\n * @see https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-header-based-auth.html\n *\n * @internal\n */\nconst contentSha256Middleware = options => next => async function contentSha256Middleware(request) {\n  if (request.headers[CONTENT_SHA256_HEADER]) {\n    return next(request);\n  } else {\n    const hash = await getHashedPayload(request.body);\n    request.headers[CONTENT_SHA256_HEADER] = hash;\n    return next(request);\n  }\n};\nexport { contentSha256Middleware };","map":{"version":3,"names":["contentSha256Middleware","options","next","request","headers","CONTENT_SHA256_HEADER","hash","getHashedPayload","body"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\runtime\\contentSha256middleware.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getHashedPayload, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { CONTENT_SHA256_HEADER } from './constants';\n/**\n * A middleware that adds the x-amz-content-sha256 header to the request if it is not already present.\n * It's required for S3 requests in browsers where the request body is sent in 1 chunk.\n * @see https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-header-based-auth.html\n *\n * @internal\n */\nexport const contentSha256Middleware = (options) => (next) => async function contentSha256Middleware(request) {\n    if (request.headers[CONTENT_SHA256_HEADER]) {\n        return next(request);\n    }\n    else {\n        const hash = await getHashedPayload(request.body);\n        request.headers[CONTENT_SHA256_HEADER] = hash;\n        return next(request);\n    }\n};\n"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,uBAAuB,GAAIC,OAAO,IAAMC,IAAI,IAAK,eAAeF,uBAAuBA,CAACG,OAAO,EAAE;EAC1G,IAAIA,OAAO,CAACC,OAAO,CAACC,qBAAqB,CAAC,EAAE;IACxC,OAAOH,IAAI,CAACC,OAAO,CAAC;EAC5B,CAAK,MACI;IACD,MAAMG,IAAI,GAAG,MAAMC,gBAAgB,CAACJ,OAAO,CAACK,IAAI,CAAC;IACjDL,OAAO,CAACC,OAAO,CAACC,qBAAqB,CAAC,GAAGC,IAAI;IAC7C,OAAOJ,IAAI,CAACC,OAAO,CAAC;EAC5B;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}