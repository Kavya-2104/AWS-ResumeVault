{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\nimport { isInterpreterStateEqual } from './utils';\nfunction identity(a) {\n  return a;\n}\nexport function useMachine(getMachine) {\n  var _a = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    _a[_i - 1] = arguments[_i];\n  }\n  var _b = __read(_a, 1),\n    _c = _b[0],\n    options = _c === void 0 ? {} : _c;\n  // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n  // so we don't miss any notifications\n  var service = useIdleInterpreter(getMachine, options);\n  var getSnapshot = useCallback(function () {\n    if (service.status === InterpreterStatus.NotStarted) {\n      return options.state ? State.create(options.state) : service.machine.initialState;\n    }\n    return service.getSnapshot();\n  }, [service]);\n  var isEqual = useCallback(function (prevState, nextState) {\n    return isInterpreterStateEqual(service, prevState, nextState);\n  }, [service]);\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [service]);\n  var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n  useEffect(function () {\n    var rehydratedState = options.state;\n    service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n    return function () {\n      service.stop();\n      service.status = InterpreterStatus.NotStarted;\n    };\n  }, []);\n  return [storeSnapshot, service.send, service];\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useCallback","useEffect","useSyncExternalStoreWithSelector","InterpreterStatus","State","useIdleInterpreter","isInterpreterStateEqual","identity","a","useMachine","getMachine","_a","_i","arguments","length","_b","_c","options","service","getSnapshot","status","NotStarted","state","create","machine","initialState","isEqual","prevState","nextState","subscribe","handleStoreChange","unsubscribe","storeSnapshot","rehydratedState","start","undefined","stop","send"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@xstate/react/es/useMachine.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useCallback, useEffect } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { InterpreterStatus, State } from 'xstate';\nimport { useIdleInterpreter } from './useInterpret';\nimport { isInterpreterStateEqual } from './utils';\nfunction identity(a) {\n    return a;\n}\nexport function useMachine(getMachine) {\n    var _a = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        _a[_i - 1] = arguments[_i];\n    }\n    var _b = __read(_a, 1), _c = _b[0], options = _c === void 0 ? {} : _c;\n    // using `useIdleInterpreter` allows us to subscribe to the service *before* we start it\n    // so we don't miss any notifications\n    var service = useIdleInterpreter(getMachine, options);\n    var getSnapshot = useCallback(function () {\n        if (service.status === InterpreterStatus.NotStarted) {\n            return (options.state\n                ? State.create(options.state)\n                : service.machine.initialState);\n        }\n        return service.getSnapshot();\n    }, [service]);\n    var isEqual = useCallback(function (prevState, nextState) {\n        return isInterpreterStateEqual(service, prevState, nextState);\n    }, [service]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [service]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n    useEffect(function () {\n        var rehydratedState = options.state;\n        service.start(rehydratedState ? State.create(rehydratedState) : undefined);\n        return function () {\n            service.stop();\n            service.status = InterpreterStatus.NotStarted;\n        };\n    }, []);\n    return [storeSnapshot, service.send, service];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}