{"ast":null,"code":"import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nconst cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nconst {\n  tokenOrchestrator\n} = cognitoUserPoolsTokenProvider;\nexport { cognitoUserPoolsTokenProvider, tokenOrchestrator };","map":{"version":3,"names":["cognitoUserPoolsTokenProvider","CognitoUserPoolsTokenProvider","tokenOrchestrator"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\tokenProvider\\tokenProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACY,MAACA,6BAA6B,GAAG,IAAIC,6BAA6B;AAClE,MAAC;EAAEC;AAAiB,CAAE,GAAGF,6BAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}