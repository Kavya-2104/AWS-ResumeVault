{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n  return node;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' ||\n  // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element,\n  // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  return (\n    // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot ||\n    // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || (\n    // DOM Element detected\n    isShadowRoot(node) ? node.host : null) ||\n    // ShadowRoot detected\n    getDocumentElement(node) // fallback\n  );\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n  return {\n    ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList :\n  // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n  return false;\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: {\n        ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\nexport { autoUpdate, computePosition, getOverflowAncestors };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","isWindow","value","document","location","alert","setInterval","getWindow","node","window","ownerDocument","defaultView","getComputedStyle$1","element","getComputedStyle","getNodeName","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isNode","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","test","isTableElement","includes","isContainingBlock","isFirefox","css","transform","perspective","contain","willChange","filter","isLayoutViewport","min","Math","max","round","getBoundingClientRect","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","win","addVisualOffsets","x","left","visualViewport","offsetLeft","y","top","offsetTop","right","bottom","getDocumentElement","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","rect","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","_node$ownerDocument","scrollableAncestor","isBody","target","concat","updatedList","contains","parent","child","rootNode","getRootNode","next","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingParent","getClippingAncestors","clippingAncestors","canEscapeClipping","clipperElement","getClippingRect","boundary","rootBoundary","mainClippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","clippingAncestor","platform","getElementRects","reference","floating","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","_ancestorResize","elementResize","animationFrame","ancestors","forEach","ancestor","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}