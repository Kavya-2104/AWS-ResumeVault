{"ast":null,"code":"import { Sha256 } from '@aws-crypto/sha256-js';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nconst getHkdfKey = (ikm, salt, info) => {\n  const awsCryptoHash = new Sha256(salt);\n  awsCryptoHash.update(ikm);\n  const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n  const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n  awsCryptoHashHmac.update(info);\n  const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n  const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n  return hashHexFromAWSCrypto.slice(0, 16);\n};\nexport { getHkdfKey };","map":{"version":3,"names":["getHkdfKey","ikm","salt","info","awsCryptoHash","Sha256","update","resultFromAWSCryptoPrk","digestSync","awsCryptoHashHmac","resultFromAWSCryptoHmac","hashHexFromAWSCrypto","slice"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\srp\\getHkdfKey.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nexport const getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,UAAU,GAAGA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC3C,MAAMC,aAAa,GAAG,IAAIC,MAAM,CAACH,IAAI,CAAC;EACtCE,aAAa,CAACE,MAAM,CAACL,GAAG,CAAC;EACzB,MAAMM,sBAAsB,GAAGH,aAAa,CAACI,UAAU,EAAE;EACzD,MAAMC,iBAAiB,GAAG,IAAIJ,MAAM,CAACE,sBAAsB,CAAC;EAC5DE,iBAAiB,CAACH,MAAM,CAACH,IAAI,CAAC;EAC9B,MAAMO,uBAAuB,GAAGD,iBAAiB,CAACD,UAAU,EAAE;EAC9D,MAAMG,oBAAoB,GAAGD,uBAAuB;EACpD,OAAOC,oBAAoB,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}