{"ast":null,"code":"import { __assign, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\nimport { EMPTY_ACTIVITY_MAP } from './constants.js';\nimport { isString, matchesState, warn } from './utils.js';\nimport { getMeta, nextEvents } from './stateUtils.js';\nimport { initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nfunction stateValuesEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n  if (isString(a) || isString(b)) {\n    return a === b;\n  }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  return aKeys.length === bKeys.length && aKeys.every(function (key) {\n    return stateValuesEqual(a[key], b[key]);\n  });\n}\nfunction isStateConfig(state) {\n  if (typeof state !== 'object' || state === null) {\n    return false;\n  }\n  return 'value' in state && '_event' in state;\n}\n/**\r\n * @deprecated Use `isStateConfig(object)` or `state instanceof State` instead.\r\n */\n\nvar isState = isStateConfig;\nfunction bindActionToState(action, state) {\n  var exec = action.exec;\n  var boundAction = __assign(__assign({}, action), {\n    exec: exec !== undefined ? function () {\n      return exec(state.context, state.event, {\n        action: action,\n        state: state,\n        _event: state._event\n      });\n    } : undefined\n  });\n  return boundAction;\n}\nvar State = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new State instance.\r\n   * @param value The state value\r\n   * @param context The extended state\r\n   * @param historyValue The tree representing historical values of the state nodes\r\n   * @param history The previous state\r\n   * @param actions An array of action objects to execute as side-effects\r\n   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).\r\n   * @param meta\r\n   * @param events Internal event queue. Should be empty with run-to-completion semantics.\r\n   * @param configuration\r\n   */\n  function State(config) {\n    var _this = this;\n    var _a;\n    this.actions = [];\n    this.activities = EMPTY_ACTIVITY_MAP;\n    this.meta = {};\n    this.events = [];\n    this.value = config.value;\n    this.context = config.context;\n    this._event = config._event;\n    this._sessionid = config._sessionid;\n    this.event = this._event.data;\n    this.historyValue = config.historyValue;\n    this.history = config.history;\n    this.actions = config.actions || [];\n    this.activities = config.activities || EMPTY_ACTIVITY_MAP;\n    this.meta = getMeta(config.configuration);\n    this.events = config.events || [];\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration;\n    this.transitions = config.transitions;\n    this.children = config.children;\n    this.done = !!config.done;\n    this.tags = (_a = Array.isArray(config.tags) ? new Set(config.tags) : config.tags) !== null && _a !== void 0 ? _a : new Set();\n    this.machine = config.machine;\n    Object.defineProperty(this, 'nextEvents', {\n      get: function () {\n        return nextEvents(_this.configuration);\n      }\n    });\n  }\n  /**\r\n   * Creates a new State instance for the given `stateValue` and `context`.\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n  State.from = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context: context,\n          _event: stateValue._event,\n          _sessionid: null,\n          historyValue: stateValue.historyValue,\n          history: stateValue.history,\n          actions: [],\n          activities: stateValue.activities,\n          meta: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {}\n        });\n      }\n      return stateValue;\n    }\n    var _event = initEvent;\n    return new State({\n      value: stateValue,\n      context: context,\n      _event: _event,\n      _sessionid: null,\n      historyValue: undefined,\n      history: undefined,\n      actions: [],\n      activities: undefined,\n      meta: undefined,\n      events: [],\n      configuration: [],\n      transitions: [],\n      children: {}\n    });\n  };\n  /**\r\n   * Creates a new State instance for the given `config`.\r\n   * @param config The state config\r\n   */\n\n  State.create = function (config) {\n    return new State(config);\n  };\n  /**\r\n   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n  State.inert = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (!stateValue.actions.length) {\n        return stateValue;\n      }\n      var _event = initEvent;\n      return new State({\n        value: stateValue.value,\n        context: context,\n        _event: _event,\n        _sessionid: null,\n        historyValue: stateValue.historyValue,\n        history: stateValue.history,\n        activities: stateValue.activities,\n        configuration: stateValue.configuration,\n        transitions: [],\n        children: {}\n      });\n    }\n    return State.from(stateValue, context);\n  };\n  /**\r\n   * Returns an array of all the string leaf state node paths.\r\n   * @param stateValue\r\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\r\n   */\n\n  State.prototype.toStrings = function (stateValue, delimiter) {\n    var _this = this;\n    if (stateValue === void 0) {\n      stateValue = this.value;\n    }\n    if (delimiter === void 0) {\n      delimiter = '.';\n    }\n    if (isString(stateValue)) {\n      return [stateValue];\n    }\n    var valueKeys = Object.keys(stateValue);\n    return valueKeys.concat.apply(valueKeys, __spreadArray([], __read(valueKeys.map(function (key) {\n      return _this.toStrings(stateValue[key], delimiter).map(function (s) {\n        return key + delimiter + s;\n      });\n    })), false));\n  };\n  State.prototype.toJSON = function () {\n    var _a = this;\n    _a.configuration;\n    _a.transitions;\n    var tags = _a.tags;\n    _a.machine;\n    var jsonValues = __rest(_a, [\"configuration\", \"transitions\", \"tags\", \"machine\"]);\n    return __assign(__assign({}, jsonValues), {\n      tags: Array.from(tags)\n    });\n  };\n  State.prototype.matches = function (parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  };\n  /**\r\n   * Whether the current state configuration has a state node with the specified `tag`.\r\n   * @param tag\r\n   */\n\n  State.prototype.hasTag = function (tag) {\n    return this.tags.has(tag);\n  };\n  /**\r\n   * Determines whether sending the `event` will cause a non-forbidden transition\r\n   * to be selected, even if the transitions have no actions nor\r\n   * change the state value.\r\n   *\r\n   * @param event The event to test\r\n   * @returns Whether the event will cause a transition\r\n   */\n\n  State.prototype.can = function (event) {\n    var _a;\n    if (IS_PRODUCTION) {\n      warn(!!this.machine, \"state.can(...) used outside of a machine-created State object; this will always return false.\");\n    }\n    var transitionData = (_a = this.machine) === null || _a === void 0 ? void 0 : _a.getTransitionData(this, event);\n    return !!(transitionData === null || transitionData === void 0 ? void 0 : transitionData.transitions.length) &&\n    // Check that at least one transition is not forbidden\n    transitionData.transitions.some(function (t) {\n      return t.target !== undefined || t.actions.length;\n    });\n  };\n  return State;\n}();\nexport { State, bindActionToState, isState, isStateConfig, stateValuesEqual };","map":{"version":3,"names":["__assign","__spreadArray","__read","__rest","EMPTY_ACTIVITY_MAP","isString","matchesState","warn","getMeta","nextEvents","initEvent","IS_PRODUCTION","stateValuesEqual","a","b","undefined","aKeys","Object","keys","bKeys","length","every","key","isStateConfig","state","isState","bindActionToState","action","exec","boundAction","context","event","_event","State","config","_this","_a","actions","activities","meta","events","value","_sessionid","data","historyValue","history","configuration","matches","bind","toStrings","transitions","children","done","tags","Array","isArray","Set","machine","defineProperty","get","from","stateValue","create","inert","prototype","delimiter","valueKeys","concat","apply","map","s","toJSON","jsonValues","parentStateValue","hasTag","tag","has","can","transitionData","getTransitionData","some","t","target"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/xstate/es/State.js"],"sourcesContent":["import { __assign, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\nimport { EMPTY_ACTIVITY_MAP } from './constants.js';\nimport { isString, matchesState, warn } from './utils.js';\nimport { getMeta, nextEvents } from './stateUtils.js';\nimport { initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nfunction stateValuesEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n\n  if (isString(a) || isString(b)) {\n    return a === b;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  return aKeys.length === bKeys.length && aKeys.every(function (key) {\n    return stateValuesEqual(a[key], b[key]);\n  });\n}\nfunction isStateConfig(state) {\n  if (typeof state !== 'object' || state === null) {\n    return false;\n  }\n\n  return 'value' in state && '_event' in state;\n}\n/**\r\n * @deprecated Use `isStateConfig(object)` or `state instanceof State` instead.\r\n */\n\nvar isState = isStateConfig;\nfunction bindActionToState(action, state) {\n  var exec = action.exec;\n\n  var boundAction = __assign(__assign({}, action), {\n    exec: exec !== undefined ? function () {\n      return exec(state.context, state.event, {\n        action: action,\n        state: state,\n        _event: state._event\n      });\n    } : undefined\n  });\n\n  return boundAction;\n}\n\nvar State =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new State instance.\r\n   * @param value The state value\r\n   * @param context The extended state\r\n   * @param historyValue The tree representing historical values of the state nodes\r\n   * @param history The previous state\r\n   * @param actions An array of action objects to execute as side-effects\r\n   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).\r\n   * @param meta\r\n   * @param events Internal event queue. Should be empty with run-to-completion semantics.\r\n   * @param configuration\r\n   */\n  function State(config) {\n    var _this = this;\n\n    var _a;\n\n    this.actions = [];\n    this.activities = EMPTY_ACTIVITY_MAP;\n    this.meta = {};\n    this.events = [];\n    this.value = config.value;\n    this.context = config.context;\n    this._event = config._event;\n    this._sessionid = config._sessionid;\n    this.event = this._event.data;\n    this.historyValue = config.historyValue;\n    this.history = config.history;\n    this.actions = config.actions || [];\n    this.activities = config.activities || EMPTY_ACTIVITY_MAP;\n    this.meta = getMeta(config.configuration);\n    this.events = config.events || [];\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration;\n    this.transitions = config.transitions;\n    this.children = config.children;\n    this.done = !!config.done;\n    this.tags = (_a = Array.isArray(config.tags) ? new Set(config.tags) : config.tags) !== null && _a !== void 0 ? _a : new Set();\n    this.machine = config.machine;\n    Object.defineProperty(this, 'nextEvents', {\n      get: function () {\n        return nextEvents(_this.configuration);\n      }\n    });\n  }\n  /**\r\n   * Creates a new State instance for the given `stateValue` and `context`.\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.from = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context: context,\n          _event: stateValue._event,\n          _sessionid: null,\n          historyValue: stateValue.historyValue,\n          history: stateValue.history,\n          actions: [],\n          activities: stateValue.activities,\n          meta: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {}\n        });\n      }\n\n      return stateValue;\n    }\n\n    var _event = initEvent;\n    return new State({\n      value: stateValue,\n      context: context,\n      _event: _event,\n      _sessionid: null,\n      historyValue: undefined,\n      history: undefined,\n      actions: [],\n      activities: undefined,\n      meta: undefined,\n      events: [],\n      configuration: [],\n      transitions: [],\n      children: {}\n    });\n  };\n  /**\r\n   * Creates a new State instance for the given `config`.\r\n   * @param config The state config\r\n   */\n\n\n  State.create = function (config) {\n    return new State(config);\n  };\n  /**\r\n   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.inert = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (!stateValue.actions.length) {\n        return stateValue;\n      }\n\n      var _event = initEvent;\n      return new State({\n        value: stateValue.value,\n        context: context,\n        _event: _event,\n        _sessionid: null,\n        historyValue: stateValue.historyValue,\n        history: stateValue.history,\n        activities: stateValue.activities,\n        configuration: stateValue.configuration,\n        transitions: [],\n        children: {}\n      });\n    }\n\n    return State.from(stateValue, context);\n  };\n  /**\r\n   * Returns an array of all the string leaf state node paths.\r\n   * @param stateValue\r\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\r\n   */\n\n\n  State.prototype.toStrings = function (stateValue, delimiter) {\n    var _this = this;\n\n    if (stateValue === void 0) {\n      stateValue = this.value;\n    }\n\n    if (delimiter === void 0) {\n      delimiter = '.';\n    }\n\n    if (isString(stateValue)) {\n      return [stateValue];\n    }\n\n    var valueKeys = Object.keys(stateValue);\n    return valueKeys.concat.apply(valueKeys, __spreadArray([], __read(valueKeys.map(function (key) {\n      return _this.toStrings(stateValue[key], delimiter).map(function (s) {\n        return key + delimiter + s;\n      });\n    })), false));\n  };\n\n  State.prototype.toJSON = function () {\n    var _a = this;\n        _a.configuration;\n        _a.transitions;\n        var tags = _a.tags;\n        _a.machine;\n        var jsonValues = __rest(_a, [\"configuration\", \"transitions\", \"tags\", \"machine\"]);\n\n    return __assign(__assign({}, jsonValues), {\n      tags: Array.from(tags)\n    });\n  };\n\n  State.prototype.matches = function (parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  };\n  /**\r\n   * Whether the current state configuration has a state node with the specified `tag`.\r\n   * @param tag\r\n   */\n\n\n  State.prototype.hasTag = function (tag) {\n    return this.tags.has(tag);\n  };\n  /**\r\n   * Determines whether sending the `event` will cause a non-forbidden transition\r\n   * to be selected, even if the transitions have no actions nor\r\n   * change the state value.\r\n   *\r\n   * @param event The event to test\r\n   * @returns Whether the event will cause a transition\r\n   */\n\n\n  State.prototype.can = function (event) {\n    var _a;\n\n    if (IS_PRODUCTION) {\n      warn(!!this.machine, \"state.can(...) used outside of a machine-created State object; this will always return false.\");\n    }\n\n    var transitionData = (_a = this.machine) === null || _a === void 0 ? void 0 : _a.getTransitionData(this, event);\n    return !!(transitionData === null || transitionData === void 0 ? void 0 : transitionData.transitions.length) && // Check that at least one transition is not forbidden\n    transitionData.transitions.some(function (t) {\n      return t.target !== undefined || t.actions.length;\n    });\n  };\n\n  return State;\n}();\n\nexport { State, bindActionToState, isState, isStateConfig, stateValuesEqual };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}