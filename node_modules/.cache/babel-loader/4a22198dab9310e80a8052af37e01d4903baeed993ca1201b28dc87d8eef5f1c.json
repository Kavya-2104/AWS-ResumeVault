{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n  const context = {};\n  let composedHandler = composeHandlerRequest => coreHandler(composeHandlerRequest, options);\n  for (let i = middleware.length - 1; i >= 0; i--) {\n    const m = middleware[i];\n    const resolvedMiddleware = m(options);\n    composedHandler = resolvedMiddleware(composedHandler, context);\n  }\n  return composedHandler(request);\n};\nexport { composeTransferHandler };","map":{"version":3,"names":["composeTransferHandler","coreHandler","middleware","request","options","context","composedHandler","composeHandlerRequest","i","length","m","resolvedMiddleware"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\clients\\internal\\composeTransferHandler.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nexport const composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,sBAAsB,GAAGA,CAACC,WAAW,EAAEC,UAAU,KAAK,CAACC,OAAO,EAAEC,OAAO,KAAK;EACrF,MAAMC,OAAO,GAAG,EAAE;EAClB,IAAIC,eAAe,GAAIC,qBAAqB,IAAKN,WAAW,CAACM,qBAAqB,EAAEH,OAAO,CAAC;EAC5F,KAAK,IAAII,CAAC,GAAGN,UAAU,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC7C,MAAME,CAAC,GAAGR,UAAU,CAACM,CAAC,CAAC;IACvB,MAAMG,kBAAkB,GAAGD,CAAC,CAACN,OAAO,CAAC;IACrCE,eAAe,GAAGK,kBAAkB,CAACL,eAAe,EAAED,OAAO,CAAC;EACtE;EACI,OAAOC,eAAe,CAACH,OAAO,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}