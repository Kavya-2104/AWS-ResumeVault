{"ast":null,"code":"import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n  if (authConfig && authConfig.Cognito.userPoolId && authConfig.Cognito.userPoolClientId) {\n    return true;\n  }\n  return false;\n}\nfunction assertAuthTokens(tokens) {\n  if (!tokens || !tokens.accessToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n  if (!tokens || !tokens.idToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nconst oAuthTokenRefreshException = new AuthError({\n  name: TOKEN_REFRESH_EXCEPTION,\n  message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n  recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`\n});\nconst tokenRefreshException = new AuthError({\n  name: USER_UNAUTHENTICATED_EXCEPTION,\n  message: 'User needs to be authenticated to call this API.',\n  recoverySuggestion: 'Sign in before calling this API again.'\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n  if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n    throw oAuthTokenRefreshException;\n  }\n  if (!isAuthenticatedWithRefreshToken(tokens)) {\n    throw tokenRefreshException;\n  }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n  if (!deviceMetadata || !deviceMetadata.deviceKey || !deviceMetadata.deviceGroupKey || !deviceMetadata.randomPassword) {\n    throw new AuthError({\n      name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n      message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n      recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.'\n    });\n  }\n}\nconst OAuthStorageKeys = {\n  inflightOAuth: 'inflightOAuth',\n  oauthSignIn: 'oauthSignIn',\n  oauthPKCE: 'oauthPKCE',\n  oauthState: 'oauthState'\n};\nfunction isAuthenticated(tokens) {\n  return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n  return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n  return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };","map":{"version":3,"names":["isTypeUserPoolConfig","authConfig","Cognito","userPoolId","userPoolClientId","assertAuthTokens","tokens","accessToken","AuthError","name","USER_UNAUTHENTICATED_EXCEPTION","message","recoverySuggestion","assertIdTokenInAuthTokens","idToken","oAuthTokenRefreshException","TOKEN_REFRESH_EXCEPTION","tokenRefreshException","assertAuthTokensWithRefreshToken","isAuthenticatedWithImplicitOauthFlow","isAuthenticatedWithRefreshToken","assertDeviceMetadata","deviceMetadata","deviceKey","deviceGroupKey","randomPassword","DEVICE_METADATA_NOT_FOUND_EXCEPTION","OAuthStorageKeys","inflightOAuth","oauthSignIn","oauthPKCE","oauthState","isAuthenticated","refreshToken"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\types.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n"],"mappings":";;;AAAA;AACA;AAGO,SAASA,oBAAoBA,CAACC,UAAU,EAAE;EAC7C,IAAIA,UAAU,IACVA,UAAU,CAACC,OAAO,CAACC,UAAU,IAC7BF,UAAU,CAACC,OAAO,CAACE,gBAAgB,EAAE;IACrC,OAAO,IAAI;EACnB;EACI,OAAO,KAAK;AAChB;AACO,SAASC,gBAAgBA,CAACC,MAAM,EAAE;EACrC,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAChC,MAAM,IAAIC,SAAS,CAAC;MAChBC,IAAI,EAAEC,8BAA8B;MACpCC,OAAO,EAAE,kDAAkD;MAC3DC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACO,SAASC,yBAAyBA,CAACP,MAAM,EAAE;EAC9C,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACQ,OAAO,EAAE;IAC5B,MAAM,IAAIN,SAAS,CAAC;MAChBC,IAAI,EAAEC,8BAA8B;MACpCC,OAAO,EAAE,kDAAkD;MAC3DC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACY,MAACG,0BAA0B,GAAG,IAAIP,SAAS,CAAC;EACpDC,IAAI,EAAEO,uBAAuB;EAC7BL,OAAO,EAAG;AACd,kEAAkE;EAC9DC,kBAAkB,EAAG;AACzB;AACA,CAAC;AACW,MAACK,qBAAqB,GAAG,IAAIT,SAAS,CAAC;EAC/CC,IAAI,EAAEC,8BAA8B;EACpCC,OAAO,EAAE,kDAAkD;EAC3DC,kBAAkB,EAAE;AACxB,CAAC;AACM,SAASM,gCAAgCA,CAACZ,MAAM,EAAE;EACrD,IAAIa,oCAAoC,CAACb,MAAM,CAAC,EAAE;IAC9C,MAAMS,0BAA0B;EACxC;EACI,IAAI,CAACK,+BAA+B,CAACd,MAAM,CAAC,EAAE;IAC1C,MAAMW,qBAAqB;EACnC;AACA;AACO,SAASI,oBAAoBA,CAACC,cAAc,EAAE;EACjD,IAAI,CAACA,cAAc,IACf,CAACA,cAAc,CAACC,SAAS,IACzB,CAACD,cAAc,CAACE,cAAc,IAC9B,CAACF,cAAc,CAACG,cAAc,EAAE;IAChC,MAAM,IAAIjB,SAAS,CAAC;MAChBC,IAAI,EAAEiB,mCAAmC;MACzCf,OAAO,EAAE,+FAA+F;MACxGC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACY,MAACe,gBAAgB,GAAG;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE;AAChB;AACA,SAASC,eAAeA,CAAC1B,MAAM,EAAE;EAC7B,OAAOA,MAAM,EAAEC,WAAW,IAAID,MAAM,EAAEQ,OAAO;AACjD;AACA,SAASM,+BAA+BA,CAACd,MAAM,EAAE;EAC7C,OAAO0B,eAAe,CAAC1B,MAAM,CAAC,IAAIA,MAAM,EAAE2B,YAAY;AAC1D;AACA,SAASd,oCAAoCA,CAACb,MAAM,EAAE;EAClD,OAAO0B,eAAe,CAAC1B,MAAM,CAAC,IAAI,CAACA,MAAM,EAAE2B,YAAY;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}