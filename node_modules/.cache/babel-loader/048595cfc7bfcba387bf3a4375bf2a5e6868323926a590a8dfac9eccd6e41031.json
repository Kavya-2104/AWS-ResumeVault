{"ast":null,"code":"import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n// First, detect mobile\n{\n  platform: Framework.Expo,\n  detectionMethod: expoDetect\n}, {\n  platform: Framework.ReactNative,\n  detectionMethod: reactNativeDetect\n},\n// Next, detect web frameworks\n{\n  platform: Framework.NextJs,\n  detectionMethod: nextWebDetect\n}, {\n  platform: Framework.Nuxt,\n  detectionMethod: nuxtWebDetect\n}, {\n  platform: Framework.Angular,\n  detectionMethod: angularWebDetect\n}, {\n  platform: Framework.React,\n  detectionMethod: reactWebDetect\n}, {\n  platform: Framework.VueJs,\n  detectionMethod: vueWebDetect\n}, {\n  platform: Framework.Svelte,\n  detectionMethod: svelteWebDetect\n}, {\n  platform: Framework.WebUnknown,\n  detectionMethod: webDetect\n},\n// Last, detect ssr frameworks\n{\n  platform: Framework.NextJsSSR,\n  detectionMethod: nextSSRDetect\n}, {\n  platform: Framework.NuxtSSR,\n  detectionMethod: nuxtSSRDetect\n}, {\n  platform: Framework.ReactSSR,\n  detectionMethod: reactSSRDetect\n}, {\n  platform: Framework.VueJsSSR,\n  detectionMethod: vueSSRDetect\n}, {\n  platform: Framework.AngularSSR,\n  detectionMethod: angularSSRDetect\n}, {\n  platform: Framework.SvelteSSR,\n  detectionMethod: svelteSSRDetect\n}];\nfunction detect() {\n  return detectionMap.find(detectionEntry => detectionEntry.detectionMethod())?.platform || Framework.ServerSideUnknown;\n}\nexport { detect };","map":{"version":3,"names":["detectionMap","platform","Framework","Expo","detectionMethod","expoDetect","ReactNative","reactNativeDetect","NextJs","nextWebDetect","Nuxt","nuxtWebDetect","Angular","angularWebDetect","React","reactWebDetect","VueJs","vueWebDetect","Svelte","svelteWebDetect","WebUnknown","webDetect","NextJsSSR","nextSSRDetect","NuxtSSR","nuxtSSRDetect","ReactSSR","reactSSRDetect","VueJsSSR","vueSSRDetect","AngularSSR","angularSSRDetect","SvelteSSR","svelteSSRDetect","detect","find","detectionEntry","ServerSideUnknown"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\Platform\\detection\\index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Framework } from '../types';\nimport { reactWebDetect, reactSSRDetect } from './React';\nimport { vueWebDetect, vueSSRDetect } from './Vue';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte';\nimport { nextWebDetect, nextSSRDetect } from './Next';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt';\nimport { angularWebDetect, angularSSRDetect } from './Angular';\nimport { reactNativeDetect } from './ReactNative';\nimport { expoDetect } from './Expo';\nimport { webDetect } from './Web';\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nexport function detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AAWA;AACA,MAAMA,YAAY,GAAG;AACrB;AACI;EAAEC,QAAQ,EAAEC,SAAS,CAACC,IAAI;EAAEC,eAAe,EAAEC;AAAU,CAAE,EACzD;EAAEJ,QAAQ,EAAEC,SAAS,CAACI,WAAW;EAAEF,eAAe,EAAEG;AAAiB,CAAE;AAC3E;AACI;EAAEN,QAAQ,EAAEC,SAAS,CAACM,MAAM;EAAEJ,eAAe,EAAEK;AAAa,CAAE,EAC9D;EAAER,QAAQ,EAAEC,SAAS,CAACQ,IAAI;EAAEN,eAAe,EAAEO;AAAa,CAAE,EAC5D;EAAEV,QAAQ,EAAEC,SAAS,CAACU,OAAO;EAAER,eAAe,EAAES;AAAgB,CAAE,EAClE;EAAEZ,QAAQ,EAAEC,SAAS,CAACY,KAAK;EAAEV,eAAe,EAAEW;AAAc,CAAE,EAC9D;EAAEd,QAAQ,EAAEC,SAAS,CAACc,KAAK;EAAEZ,eAAe,EAAEa;AAAY,CAAE,EAC5D;EAAEhB,QAAQ,EAAEC,SAAS,CAACgB,MAAM;EAAEd,eAAe,EAAEe;AAAe,CAAE,EAChE;EAAElB,QAAQ,EAAEC,SAAS,CAACkB,UAAU;EAAEhB,eAAe,EAAEiB;AAAS,CAAE;AAClE;AACI;EAAEpB,QAAQ,EAAEC,SAAS,CAACoB,SAAS;EAAElB,eAAe,EAAEmB;AAAa,CAAE,EACjE;EAAEtB,QAAQ,EAAEC,SAAS,CAACsB,OAAO;EAAEpB,eAAe,EAAEqB;AAAa,CAAE,EAC/D;EAAExB,QAAQ,EAAEC,SAAS,CAACwB,QAAQ;EAAEtB,eAAe,EAAEuB;AAAc,CAAE,EACjE;EAAE1B,QAAQ,EAAEC,SAAS,CAAC0B,QAAQ;EAAExB,eAAe,EAAEyB;AAAY,CAAE,EAC/D;EAAE5B,QAAQ,EAAEC,SAAS,CAAC4B,UAAU;EAAE1B,eAAe,EAAE2B;AAAgB,CAAE,EACrE;EAAE9B,QAAQ,EAAEC,SAAS,CAAC8B,SAAS;EAAE5B,eAAe,EAAE6B;AAAe,CAAE,CACtE;AACM,SAASC,MAAMA,CAAA,EAAG;EACrB,OAAQlC,YAAY,CAACmC,IAAI,CAACC,cAAc,IAAIA,cAAc,CAAChC,eAAe,EAAE,CAAC,EACvEH,QAAQ,IAAIC,SAAS,CAACmC,iBAAiB;AACjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}