{"ast":null,"code":"import BigInteger from '../BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateA = async ({\n  a,\n  g,\n  N\n}) => {\n  return new Promise((resolve, reject) => {\n    g.modPow(a, N, (err, A) => {\n      if (err) {\n        reject(err);\n        return;\n      }\n      if (A.mod(N).equals(BigInteger.ZERO)) {\n        reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n        return;\n      }\n      resolve(A);\n    });\n  });\n};\nexport { calculateA };","map":{"version":3,"names":["calculateA","a","g","N","Promise","resolve","reject","modPow","err","A","mod","equals","BigInteger","ZERO","Error"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\srp\\calculate\\calculateA.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\n/**\n * @internal\n */\nexport const calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACY,MAACA,UAAU,GAAG,MAAAA,CAAO;EAAEC,CAAC;EAAEC,CAAC;EAAEC;AAAC,CAAG,KAAK;EAC9C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCJ,CAAC,CAACK,MAAM,CAACN,CAAC,EAAEE,CAAC,EAAE,CAACK,GAAG,EAAEC,CAAC,KAAK;MACvB,IAAID,GAAG,EAAE;QACLF,MAAM,CAACE,GAAG,CAAC;QACX;MAChB;MACY,IAAIC,CAAC,CAACC,GAAG,CAACP,CAAC,CAAC,CAACQ,MAAM,CAACC,UAAU,CAACC,IAAI,CAAC,EAAE;QAClCP,MAAM,CAAC,IAAIQ,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC5D;MAChB;MACYT,OAAO,CAACI,CAAC,CAAC;IACtB,CAAS,CAAC;EACV,CAAK,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}