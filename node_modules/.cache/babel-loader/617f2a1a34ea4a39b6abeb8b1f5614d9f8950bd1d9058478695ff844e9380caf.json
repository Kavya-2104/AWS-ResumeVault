{"ast":null,"code":"import { amplifyUuid } from '../../../utils/amplifyUuid/index.mjs';\nimport '../../../Cache/index.mjs';\nimport { resolveEndpointId } from '../utils/resolveEndpointId.mjs';\nimport '../../../utils/sessionListener/index.mjs';\nimport { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT } from '../utils/constants.mjs';\nimport { getEventBuffer } from '../utils/getEventBuffer.mjs';\nimport { SESSION_STOP_EVENT, SESSION_START_EVENT } from '../../../utils/sessionListener/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nlet session;\n/**\n * @internal\n */\nconst record = async ({\n  appId,\n  category,\n  channelType,\n  credentials,\n  event,\n  identityId,\n  region,\n  userAgentValue,\n  bufferSize,\n  flushInterval,\n  flushSize,\n  resendLimit\n}) => {\n  let eventSession = session;\n  const currentTime = new Date();\n  const timestampISOString = currentTime.toISOString();\n  const eventId = amplifyUuid();\n  // Prepare event buffer if required\n  const buffer = getEventBuffer({\n    appId,\n    region,\n    credentials,\n    bufferSize: bufferSize ?? BUFFER_SIZE,\n    flushInterval: flushInterval ?? FLUSH_INTERVAL,\n    flushSize: flushSize ?? FLUSH_SIZE,\n    resendLimit: resendLimit ?? RESEND_LIMIT,\n    identityId,\n    userAgentValue\n  });\n  const endpointId = await resolveEndpointId({\n    appId,\n    category,\n    channelType,\n    credentials,\n    identityId,\n    region,\n    userAgentValue\n  });\n  // Generate session if required\n  if (!eventSession || event.name === SESSION_START_EVENT) {\n    const sessionId = amplifyUuid();\n    session = {\n      Id: sessionId,\n      StartTimestamp: timestampISOString\n    };\n    eventSession = session;\n  }\n  // Terminate session when required\n  if (session && event.name === SESSION_STOP_EVENT) {\n    eventSession = {\n      ...session,\n      StopTimestamp: timestampISOString,\n      Duration: currentTime.getTime() - new Date(session.StartTimestamp).getTime()\n    };\n    session = undefined;\n  }\n  // Push event to buffer\n  buffer.push({\n    eventId,\n    endpointId,\n    event,\n    session: eventSession,\n    timestamp: timestampISOString,\n    resendLimit: resendLimit ?? RESEND_LIMIT\n  });\n};\nexport { record };","map":{"version":3,"names":["session","record","appId","category","channelType","credentials","event","identityId","region","userAgentValue","bufferSize","flushInterval","flushSize","resendLimit","eventSession","currentTime","Date","timestampISOString","toISOString","eventId","amplifyUuid","buffer","getEventBuffer","BUFFER_SIZE","FLUSH_INTERVAL","FLUSH_SIZE","RESEND_LIMIT","endpointId","resolveEndpointId","name","SESSION_START_EVENT","sessionId","Id","StartTimestamp","SESSION_STOP_EVENT","StopTimestamp","Duration","getTime","undefined","push","timestamp"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\providers\\pinpoint\\apis\\record.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { amplifyUuid } from '../../../utils/amplifyUuid';\nimport { resolveEndpointId } from '../utils';\nimport { SESSION_START_EVENT, SESSION_STOP_EVENT, } from '../../../utils/sessionListener';\nimport { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT, } from '../utils/constants';\nimport { getEventBuffer } from '../utils/getEventBuffer';\nlet session;\n/**\n * @internal\n */\nexport const record = async ({ appId, category, channelType, credentials, event, identityId, region, userAgentValue, bufferSize, flushInterval, flushSize, resendLimit, }) => {\n    let eventSession = session;\n    const currentTime = new Date();\n    const timestampISOString = currentTime.toISOString();\n    const eventId = amplifyUuid();\n    // Prepare event buffer if required\n    const buffer = getEventBuffer({\n        appId,\n        region,\n        credentials,\n        bufferSize: bufferSize ?? BUFFER_SIZE,\n        flushInterval: flushInterval ?? FLUSH_INTERVAL,\n        flushSize: flushSize ?? FLUSH_SIZE,\n        resendLimit: resendLimit ?? RESEND_LIMIT,\n        identityId,\n        userAgentValue,\n    });\n    const endpointId = await resolveEndpointId({\n        appId,\n        category,\n        channelType,\n        credentials,\n        identityId,\n        region,\n        userAgentValue,\n    });\n    // Generate session if required\n    if (!eventSession || event.name === SESSION_START_EVENT) {\n        const sessionId = amplifyUuid();\n        session = {\n            Id: sessionId,\n            StartTimestamp: timestampISOString,\n        };\n        eventSession = session;\n    }\n    // Terminate session when required\n    if (session && event.name === SESSION_STOP_EVENT) {\n        eventSession = {\n            ...session,\n            StopTimestamp: timestampISOString,\n            Duration: currentTime.getTime() - new Date(session.StartTimestamp).getTime(),\n        };\n        session = undefined;\n    }\n    // Push event to buffer\n    buffer.push({\n        eventId,\n        endpointId,\n        event,\n        session: eventSession,\n        timestamp: timestampISOString,\n        resendLimit: resendLimit ?? RESEND_LIMIT,\n    });\n};\n"],"mappings":";;;;;;;;AAAA;AACA;AAMA,IAAIA,OAAO;AACX;AACA;AACA;AACY,MAACC,MAAM,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,WAAW;EAAEC,KAAK;EAAEC,UAAU;EAAEC,MAAM;EAAEC,cAAc;EAAEC,UAAU;EAAEC,aAAa;EAAEC,SAAS;EAAEC;AAAW,CAAG,KAAK;EAC1K,IAAIC,YAAY,GAAGd,OAAO;EAC1B,MAAMe,WAAW,GAAG,IAAIC,IAAI,EAAE;EAC9B,MAAMC,kBAAkB,GAAGF,WAAW,CAACG,WAAW,EAAE;EACpD,MAAMC,OAAO,GAAGC,WAAW,EAAE;EACjC;EACI,MAAMC,MAAM,GAAGC,cAAc,CAAC;IAC1BpB,KAAK;IACLM,MAAM;IACNH,WAAW;IACXK,UAAU,EAAEA,UAAU,IAAIa,WAAW;IACrCZ,aAAa,EAAEA,aAAa,IAAIa,cAAc;IAC9CZ,SAAS,EAAEA,SAAS,IAAIa,UAAU;IAClCZ,WAAW,EAAEA,WAAW,IAAIa,YAAY;IACxCnB,UAAU;IACVE;EACR,CAAK,CAAC;EACF,MAAMkB,UAAU,GAAG,MAAMC,iBAAiB,CAAC;IACvC1B,KAAK;IACLC,QAAQ;IACRC,WAAW;IACXC,WAAW;IACXE,UAAU;IACVC,MAAM;IACNC;EACR,CAAK,CAAC;EACN;EACI,IAAI,CAACK,YAAY,IAAIR,KAAK,CAACuB,IAAI,KAAKC,mBAAmB,EAAE;IACrD,MAAMC,SAAS,GAAGX,WAAW,EAAE;IAC/BpB,OAAO,GAAG;MACNgC,EAAE,EAAED,SAAS;MACbE,cAAc,EAAEhB;IAC5B,CAAS;IACDH,YAAY,GAAGd,OAAO;EAC9B;EACA;EACI,IAAIA,OAAO,IAAIM,KAAK,CAACuB,IAAI,KAAKK,kBAAkB,EAAE;IAC9CpB,YAAY,GAAG;MACX,GAAGd,OAAO;MACVmC,aAAa,EAAElB,kBAAkB;MACjCmB,QAAQ,EAAErB,WAAW,CAACsB,OAAO,EAAE,GAAG,IAAIrB,IAAI,CAAChB,OAAO,CAACiC,cAAc,CAAC,CAACI,OAAO;IACtF,CAAS;IACDrC,OAAO,GAAGsC,SAAS;EAC3B;EACA;EACIjB,MAAM,CAACkB,IAAI,CAAC;IACRpB,OAAO;IACPQ,UAAU;IACVrB,KAAK;IACLN,OAAO,EAAEc,YAAY;IACrB0B,SAAS,EAAEvB,kBAAkB;IAC7BJ,WAAW,EAAEA,WAAW,IAAIa;EACpC,CAAK,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}