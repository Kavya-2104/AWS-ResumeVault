{"ast":null,"code":"import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n  AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n  AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n  AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n  AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n  AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n  [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n    message: 'Auth Token Provider not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n    message: 'Auth UserPool or IdentityPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.'\n  },\n  [AuthConfigurationErrorCode.AuthUserPoolException]: {\n    message: 'Auth UserPool not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.'\n  },\n  [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n    message: 'Invalid identity pool id provided.',\n    recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.'\n  },\n  [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n    message: 'oauth param not configured.',\n    recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.'\n  }\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\nexport { AuthConfigurationErrorCode, assert };","map":{"version":3,"names":["AuthConfigurationErrorCode","authConfigurationErrorMap","AuthTokenConfigException","message","recoverySuggestion","AuthUserPoolAndIdentityPoolException","AuthUserPoolException","InvalidIdentityPoolIdException","OAuthNotConfigureException","assert","createAssertionFunction"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\singleton\\Auth\\utils\\errorHelpers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction } from '../../../errors';\nexport var AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nexport const assert = createAssertionFunction(authConfigurationErrorMap);\n"],"mappings":";;;;AAAA;AACA;AAEU,IAACA,0BAAA;AACX,CAAC,UAAUA,0BAA0B,EAAE;EACnCA,0BAA0B,CAAC,0BAA0B,CAAC,GAAG,0BAA0B;EACnFA,0BAA0B,CAAC,sCAAsC,CAAC,GAAG,sCAAsC;EAC3GA,0BAA0B,CAAC,uBAAuB,CAAC,GAAG,uBAAuB;EAC7EA,0BAA0B,CAAC,gCAAgC,CAAC,GAAG,gCAAgC;EAC/FA,0BAA0B,CAAC,4BAA4B,CAAC,GAAG,4BAA4B;AAC3F,CAAC,EAAEA,0BAA0B,KAAKA,0BAA0B,GAAG,EAAE,CAAC,CAAC;AACnE,MAAMC,yBAAyB,GAAG;EAC9B,CAACD,0BAA0B,CAACE,wBAAwB,GAAG;IACnDC,OAAO,EAAE,qCAAqC;IAC9CC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACJ,0BAA0B,CAACK,oCAAoC,GAAG;IAC/DF,OAAO,EAAE,+CAA+C;IACxDC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACJ,0BAA0B,CAACM,qBAAqB,GAAG;IAChDH,OAAO,EAAE,+BAA+B;IACxCC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACJ,0BAA0B,CAACO,8BAA8B,GAAG;IACzDJ,OAAO,EAAE,oCAAoC;IAC7CC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACJ,0BAA0B,CAACQ,0BAA0B,GAAG;IACrDL,OAAO,EAAE,6BAA6B;IACtCC,kBAAkB,EAAE;EAC5B;AACA,CAAC;AACW,MAACK,MAAM,GAAGC,uBAAuB,CAACT,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}