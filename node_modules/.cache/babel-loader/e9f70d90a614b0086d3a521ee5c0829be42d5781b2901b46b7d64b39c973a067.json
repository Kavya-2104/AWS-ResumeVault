{"ast":null,"code":"import { ComponentPropsToStylePropsMap } from '../types/style.mjs';\nconst isStyleKey = prop => {\n  return prop in ComponentPropsToStylePropsMap;\n};\n/**\n * This function splits props into style props and non-style props. This is used\n * on Field primitives so we can apply style props on the wrapper element and\n * the rest on the input.\n * @param props this should be a destructured `rest` from the component's props\n */\nconst splitPrimitiveProps = props => {\n  const splitProps = {\n    styleProps: {},\n    rest: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (isStyleKey(prop)) {\n      // we know it is a style key\n      // so we know we can assign the key in styleProps\n      splitProps.styleProps = {\n        ...splitProps.styleProps,\n        [prop]: props[prop]\n      };\n    } else {\n      splitProps.rest = {\n        ...splitProps.rest,\n        [prop]: props[prop]\n      };\n    }\n  });\n  return splitProps;\n};\nexport { splitPrimitiveProps };","map":{"version":3,"names":["ComponentPropsToStylePropsMap","isStyleKey","prop","splitPrimitiveProps","props","splitProps","styleProps","rest","Object","keys","forEach"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/splitPrimitiveProps.mjs"],"sourcesContent":["import { ComponentPropsToStylePropsMap } from '../types/style.mjs';\n\nconst isStyleKey = (prop) => {\n    return prop in ComponentPropsToStylePropsMap;\n};\n/**\n * This function splits props into style props and non-style props. This is used\n * on Field primitives so we can apply style props on the wrapper element and\n * the rest on the input.\n * @param props this should be a destructured `rest` from the component's props\n */\nconst splitPrimitiveProps = (props) => {\n    const splitProps = {\n        styleProps: {},\n        rest: {},\n    };\n    Object.keys(props).forEach((prop) => {\n        if (isStyleKey(prop)) {\n            // we know it is a style key\n            // so we know we can assign the key in styleProps\n            splitProps.styleProps = {\n                ...splitProps.styleProps,\n                [prop]: props[prop],\n            };\n        }\n        else {\n            splitProps.rest = {\n                ...splitProps.rest,\n                [prop]: props[prop],\n            };\n        }\n    });\n    return splitProps;\n};\n\nexport { splitPrimitiveProps };\n"],"mappings":"AAAA,SAASA,6BAA6B,QAAQ,oBAAoB;AAElE,MAAMC,UAAU,GAAIC,IAAI,IAAK;EACzB,OAAOA,IAAI,IAAIF,6BAA6B;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EACnC,MAAMC,UAAU,GAAG;IACfC,UAAU,EAAE,CAAC,CAAC;IACdC,IAAI,EAAE,CAAC;EACX,CAAC;EACDC,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,OAAO,CAAER,IAAI,IAAK;IACjC,IAAID,UAAU,CAACC,IAAI,CAAC,EAAE;MAClB;MACA;MACAG,UAAU,CAACC,UAAU,GAAG;QACpB,GAAGD,UAAU,CAACC,UAAU;QACxB,CAACJ,IAAI,GAAGE,KAAK,CAACF,IAAI;MACtB,CAAC;IACL,CAAC,MACI;MACDG,UAAU,CAACE,IAAI,GAAG;QACd,GAAGF,UAAU,CAACE,IAAI;QAClB,CAACL,IAAI,GAAGE,KAAK,CAACF,IAAI;MACtB,CAAC;IACL;EACJ,CAAC,CAAC;EACF,OAAOG,UAAU;AACrB,CAAC;AAED,SAASF,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}