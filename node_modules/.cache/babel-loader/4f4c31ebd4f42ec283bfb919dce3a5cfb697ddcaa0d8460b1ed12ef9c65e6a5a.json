{"ast":null,"code":"import BigInteger from '../BigInteger/BigInteger.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateU = ({\n  A,\n  B\n}) => {\n  const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n  if (U.equals(BigInteger.ZERO)) {\n    throw new Error('U cannot be zero.');\n  }\n  return U;\n};\nexport { calculateU };","map":{"version":3,"names":["calculateU","A","B","U","BigInteger","getHashFromHex","getPaddedHex","equals","ZERO","Error"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\srp\\calculate\\calculateU.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getPaddedHex } from '../getPaddedHex';\n/**\n * @internal\n */\nexport const calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n"],"mappings":";;;;AAAA;AACA;AAIA;AACA;AACA;AACY,MAACA,UAAU,GAAGA,CAAC;EAAEC,CAAC;EAAEC;AAAC,CAAG,KAAK;EACrC,MAAMC,CAAC,GAAG,IAAIC,UAAU,CAACC,cAAc,CAACC,YAAY,CAACL,CAAC,CAAC,GAAGK,YAAY,CAACJ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC/E,IAAIC,CAAC,CAACI,MAAM,CAACH,UAAU,CAACI,IAAI,CAAC,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EAC5C;EACI,OAAON,CAAC;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}