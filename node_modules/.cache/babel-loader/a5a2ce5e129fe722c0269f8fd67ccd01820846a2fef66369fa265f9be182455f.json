{"ast":null,"code":"import { __assign } from './_virtual/_tslib.js';\nvar defaultOptions = {\n  deferEvents: false\n};\nvar Scheduler = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n      this.process(callback);\n    }\n    this.flushEvents();\n  };\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n    this.process(task);\n    this.flushEvents();\n  };\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n  return Scheduler;\n}();\nexport { Scheduler };","map":{"version":3,"names":["__assign","defaultOptions","deferEvents","Scheduler","options","processingEvent","queue","initialized","prototype","initialize","callback","schedule","process","flushEvents","task","push","length","Error","clear","nextCallback","shift","e"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/xstate/es/scheduler.js"],"sourcesContent":["import { __assign } from './_virtual/_tslib.js';\n\nvar defaultOptions = {\n  deferEvents: false\n};\n\nvar Scheduler =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n\n      this.process(callback);\n    }\n\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n\n    this.process(task);\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n\n  return Scheduler;\n}();\n\nexport { Scheduler };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,sBAAsB;AAE/C,IAAIC,cAAc,GAAG;EACnBC,WAAW,EAAE;AACf,CAAC;AAED,IAAIC,SAAS,GACb;;AAEA;AACA,YAAY;EACV,SAASA,SAASA,CAACC,OAAO,EAAE;IAC1B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACH,OAAO,GAAGJ,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC,EAAEG,OAAO,CAAC;EAChE;EAEAD,SAAS,CAACK,SAAS,CAACC,UAAU,GAAG,UAAUC,QAAQ,EAAE;IACnD,IAAI,CAACH,WAAW,GAAG,IAAI;IAEvB,IAAIG,QAAQ,EAAE;MACZ,IAAI,CAAC,IAAI,CAACN,OAAO,CAACF,WAAW,EAAE;QAC7B,IAAI,CAACS,QAAQ,CAACD,QAAQ,CAAC;QACvB;MACF;MAEA,IAAI,CAACE,OAAO,CAACF,QAAQ,CAAC;IACxB;IAEA,IAAI,CAACG,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDV,SAAS,CAACK,SAAS,CAACG,QAAQ,GAAG,UAAUG,IAAI,EAAE;IAC7C,IAAI,CAAC,IAAI,CAACP,WAAW,IAAI,IAAI,CAACF,eAAe,EAAE;MAC7C,IAAI,CAACC,KAAK,CAACS,IAAI,CAACD,IAAI,CAAC;MACrB;IACF;IAEA,IAAI,IAAI,CAACR,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,8DAA8D,CAAC;IACjF;IAEA,IAAI,CAACL,OAAO,CAACE,IAAI,CAAC;IAClB,IAAI,CAACD,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDV,SAAS,CAACK,SAAS,CAACU,KAAK,GAAG,YAAY;IACtC,IAAI,CAACZ,KAAK,GAAG,EAAE;EACjB,CAAC;EAEDH,SAAS,CAACK,SAAS,CAACK,WAAW,GAAG,YAAY;IAC5C,IAAIM,YAAY,GAAG,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,CAAC;IAErC,OAAOD,YAAY,EAAE;MACnB,IAAI,CAACP,OAAO,CAACO,YAAY,CAAC;MAC1BA,YAAY,GAAG,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,CAAC;IACnC;EACF,CAAC;EAEDjB,SAAS,CAACK,SAAS,CAACI,OAAO,GAAG,UAAUF,QAAQ,EAAE;IAChD,IAAI,CAACL,eAAe,GAAG,IAAI;IAE3B,IAAI;MACFK,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOW,CAAC,EAAE;MACV;MACA;MACA,IAAI,CAACH,KAAK,CAAC,CAAC;MACZ,MAAMG,CAAC;IACT,CAAC,SAAS;MACR,IAAI,CAAChB,eAAe,GAAG,KAAK;IAC9B;EACF,CAAC;EAED,OAAOF,SAAS;AAClB,CAAC,CAAC,CAAC;AAEH,SAASA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}