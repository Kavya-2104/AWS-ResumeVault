{"ast":null,"code":"import { AuthError } from '../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getRegion(userPoolId) {\n  const region = userPoolId?.split('_')[0];\n  if (!userPoolId || userPoolId.indexOf('_') < 0 || !region || typeof region !== 'string') throw new AuthError({\n    name: 'InvalidUserPoolId',\n    message: 'Invalid user pool id provided.'\n  });\n  return region;\n}\nfunction getRegionFromIdentityPoolId(identityPoolId) {\n  if (!identityPoolId || !identityPoolId.includes(':')) {\n    throw new AuthError({\n      name: 'InvalidIdentityPoolIdException',\n      message: 'Invalid identity pool id provided.',\n      recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.'\n    });\n  }\n  return identityPoolId.split(':')[0];\n}\nexport { getRegion, getRegionFromIdentityPoolId };","map":{"version":3,"names":["getRegion","userPoolId","region","split","indexOf","AuthError","name","message","getRegionFromIdentityPoolId","identityPoolId","includes","recoverySuggestion"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\clients\\CognitoIdentityProvider\\utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nexport function getRegion(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n"],"mappings":";;AAAA;AACA;AAEO,SAASA,SAASA,CAACC,UAAU,EAAE;EAClC,MAAMC,MAAM,GAAGD,UAAU,EAAEE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,IAAI,CAACF,UAAU,IACXA,UAAU,CAACG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAC3B,CAACF,MAAM,IACP,OAAOA,MAAM,KAAK,QAAQ,EAC1B,MAAM,IAAIG,SAAS,CAAC;IAChBC,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE;EACrB,CAAS,CAAC;EACN,OAAOL,MAAM;AACjB;AACO,SAASM,2BAA2BA,CAACC,cAAc,EAAE;EACxD,IAAI,CAACA,cAAc,IAAI,CAACA,cAAc,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAClD,MAAM,IAAIL,SAAS,CAAC;MAChBC,IAAI,EAAE,gCAAgC;MACtCC,OAAO,EAAE,oCAAoC;MAC7CI,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;EACI,OAAOF,cAAc,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}