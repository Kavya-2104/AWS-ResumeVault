{"ast":null,"code":"import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUser } from '../../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokens } from '../../utils/types.mjs';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchUserAttributes = async amplify => {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    tokens\n  } = await fetchAuthSession(amplify, {\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const {\n    UserAttributes\n  } = await getUser({\n    region: getRegion(authConfig.userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  return toAuthUserAttribute(UserAttributes);\n};\nexport { fetchUserAttributes };","map":{"version":3,"names":["fetchUserAttributes","amplify","authConfig","getConfig","Auth","Cognito","assertTokenProviderConfig","tokens","fetchAuthSession","forceRefresh","assertAuthTokens","UserAttributes","getUser","region","getRegion","userPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","FetchUserAttributes","AccessToken","accessToken","toString","toAuthUserAttribute"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\apis\\internal\\fetchUserAttributes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertTokenProviderConfig, fetchAuthSession, } from '@aws-amplify/core/internals/utils';\nimport { getUser } from '../../utils/clients/CognitoIdentityProvider';\nimport { getRegion } from '../../utils/clients/CognitoIdentityProvider/utils';\nimport { assertAuthTokens } from '../../utils/types';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers';\nimport { getAuthUserAgentValue } from '../../../../utils';\nexport const fetchUserAttributes = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { tokens } = await fetchAuthSession(amplify, {\n        forceRefresh: false,\n    });\n    assertAuthTokens(tokens);\n    const { UserAttributes } = await getUser({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return toAuthUserAttribute(UserAttributes);\n};\n"],"mappings":";;;;;;;AAAA;AACA;AAOY,MAACA,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,MAAMC,UAAU,GAAGD,OAAO,CAACE,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACJ,UAAU,CAAC;EACrC,MAAM;IAAEK;EAAM,CAAE,GAAG,MAAMC,gBAAgB,CAACP,OAAO,EAAE;IAC/CQ,YAAY,EAAE;EACtB,CAAK,CAAC;EACFC,gBAAgB,CAACH,MAAM,CAAC;EACxB,MAAM;IAAEI;EAAc,CAAE,GAAG,MAAMC,OAAO,CAAC;IACrCC,MAAM,EAAEC,SAAS,CAACZ,UAAU,CAACa,UAAU,CAAC;IACxCC,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,mBAAmB;EAC5E,CAAK,EAAE;IACCC,WAAW,EAAEb,MAAM,CAACc,WAAW,CAACC,QAAQ;EAChD,CAAK,CAAC;EACF,OAAOC,mBAAmB,CAACZ,cAAc,CAAC;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}