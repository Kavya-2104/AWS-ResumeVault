{"ast":null,"code":"import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n  const {\n    message,\n    recoverySuggestion\n  } = errorMap[name];\n  if (!assertion) {\n    throw new AssertionError({\n      name,\n      message: additionalContext ? `${message} ${additionalContext}` : message,\n      recoverySuggestion\n    });\n  }\n};\nexport { createAssertionFunction };","map":{"version":3,"names":["createAssertionFunction","errorMap","AssertionError","AmplifyError","assertion","name","additionalContext","message","recoverySuggestion"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\errors\\createAssertionFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError } from './AmplifyError';\nexport const createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n"],"mappings":";;AAAA;AACA;AAEY,MAACA,uBAAuB,GAAGA,CAACC,QAAQ,EAAEC,cAAc,GAAGC,YAAY,KAAK,CAACC,SAAS,EAAEC,IAAI,EAAEC,iBAAiB,KAAK;EACxH,MAAM;IAAEC,OAAO;IAAEC;EAAkB,CAAE,GAAGP,QAAQ,CAACI,IAAI,CAAC;EACtD,IAAI,CAACD,SAAS,EAAE;IACZ,MAAM,IAAIF,cAAc,CAAC;MACrBG,IAAI;MACJE,OAAO,EAAED,iBAAiB,GACnB,GAAEC,OAAQ,IAAGD,iBAAkB,EAAC,GACjCC,OAAO;MACbC;IACZ,CAAS,CAAC;EACV;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}