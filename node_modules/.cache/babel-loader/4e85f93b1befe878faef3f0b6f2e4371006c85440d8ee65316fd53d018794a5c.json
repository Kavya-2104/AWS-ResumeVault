{"ast":null,"code":"import { AuthError } from '../../../errors/AuthError.mjs';\nimport { USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n  if (authConfig && authConfig.Cognito.userPoolId && authConfig.Cognito.userPoolClientId) {\n    return true;\n  }\n  return false;\n}\nfunction assertAuthTokens(tokens) {\n  if (!tokens || !tokens.accessToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n  if (!tokens || !tokens.idToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertAuthTokensWithRefreshToken(tokens) {\n  if (!tokens || !tokens.accessToken || !tokens.refreshToken) {\n    throw new AuthError({\n      name: USER_UNAUTHENTICATED_EXCEPTION,\n      message: 'User needs to be authenticated to call this API.',\n      recoverySuggestion: 'Sign in before calling this API again.'\n    });\n  }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n  if (!deviceMetadata || !deviceMetadata.deviceKey || !deviceMetadata.deviceGroupKey || !deviceMetadata.randomPassword) {\n    throw new AuthError({\n      name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n      message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n      recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.'\n    });\n  }\n}\nconst OAuthStorageKeys = {\n  inflightOAuth: 'inflightOAuth',\n  oauthSignIn: 'oauthSignIn',\n  oauthPKCE: 'oauthPKCE',\n  oauthState: 'oauthState'\n};\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig };","map":{"version":3,"names":["isTypeUserPoolConfig","authConfig","Cognito","userPoolId","userPoolClientId","assertAuthTokens","tokens","accessToken","AuthError","name","USER_UNAUTHENTICATED_EXCEPTION","message","recoverySuggestion","assertIdTokenInAuthTokens","idToken","assertAuthTokensWithRefreshToken","refreshToken","assertDeviceMetadata","deviceMetadata","deviceKey","deviceGroupKey","randomPassword","DEVICE_METADATA_NOT_FOUND_EXCEPTION","OAuthStorageKeys","inflightOAuth","oauthSignIn","oauthPKCE","oauthState"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\types.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (!tokens || !tokens.accessToken || !tokens.refreshToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\n"],"mappings":";;;AAAA;AACA;AAGO,SAASA,oBAAoBA,CAACC,UAAU,EAAE;EAC7C,IAAIA,UAAU,IACVA,UAAU,CAACC,OAAO,CAACC,UAAU,IAC7BF,UAAU,CAACC,OAAO,CAACE,gBAAgB,EAAE;IACrC,OAAO,IAAI;EACnB;EACI,OAAO,KAAK;AAChB;AACO,SAASC,gBAAgBA,CAACC,MAAM,EAAE;EACrC,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAChC,MAAM,IAAIC,SAAS,CAAC;MAChBC,IAAI,EAAEC,8BAA8B;MACpCC,OAAO,EAAE,kDAAkD;MAC3DC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACO,SAASC,yBAAyBA,CAACP,MAAM,EAAE;EAC9C,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACQ,OAAO,EAAE;IAC5B,MAAM,IAAIN,SAAS,CAAC;MAChBC,IAAI,EAAEC,8BAA8B;MACpCC,OAAO,EAAE,kDAAkD;MAC3DC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACO,SAASG,gCAAgCA,CAACT,MAAM,EAAE;EACrD,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,WAAW,IAAI,CAACD,MAAM,CAACU,YAAY,EAAE;IACxD,MAAM,IAAIR,SAAS,CAAC;MAChBC,IAAI,EAAEC,8BAA8B;MACpCC,OAAO,EAAE,kDAAkD;MAC3DC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACO,SAASK,oBAAoBA,CAACC,cAAc,EAAE;EACjD,IAAI,CAACA,cAAc,IACf,CAACA,cAAc,CAACC,SAAS,IACzB,CAACD,cAAc,CAACE,cAAc,IAC9B,CAACF,cAAc,CAACG,cAAc,EAAE;IAChC,MAAM,IAAIb,SAAS,CAAC;MAChBC,IAAI,EAAEa,mCAAmC;MACzCX,OAAO,EAAE,+FAA+F;MACxGC,kBAAkB,EAAE;IAChC,CAAS,CAAC;EACV;AACA;AACY,MAACW,gBAAgB,GAAG;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAE,WAAW;EACtBC,UAAU,EAAE;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}