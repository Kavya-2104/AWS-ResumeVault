{"ast":null,"code":"import { isBrowser } from '../isBrowser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst stateChangeListeners = new Set();\nclass SessionListener {\n  constructor() {\n    this.listenerActive = false;\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    // Setup state listeners\n    if (isBrowser()) {\n      document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n      this.listenerActive = true;\n    }\n  }\n  addStateChangeListener(listener, notifyOnAdd = false) {\n    // No-op if document listener is not active\n    if (!this.listenerActive) {\n      return;\n    }\n    stateChangeListeners.add(listener);\n    // Notify new handlers of the current status on add\n    if (notifyOnAdd) {\n      listener(this.getSessionState());\n    }\n  }\n  removeStateChangeListener(handler) {\n    // No-op if document listener is not active\n    if (!this.listenerActive) {\n      return;\n    }\n    stateChangeListeners.delete(handler);\n  }\n  handleVisibilityChange() {\n    this.notifyHandlers();\n  }\n  notifyHandlers() {\n    const sessionState = this.getSessionState();\n    stateChangeListeners.forEach(listener => {\n      listener(sessionState);\n    });\n  }\n  getSessionState() {\n    if (isBrowser() && document.visibilityState !== 'hidden') {\n      return 'started';\n    }\n    // If, for any reason, document is undefined the session will never start\n    return 'ended';\n  }\n}\nexport { SessionListener };","map":{"version":3,"names":["stateChangeListeners","Set","SessionListener","constructor","listenerActive","handleVisibilityChange","bind","isBrowser","document","addEventListener","addStateChangeListener","listener","notifyOnAdd","add","getSessionState","removeStateChangeListener","handler","delete","notifyHandlers","sessionState","forEach","visibilityState"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\core\\src\\utils\\sessionListener\\SessionListener.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isBrowser } from '../isBrowser';\nconst stateChangeListeners = new Set();\nexport class SessionListener {\n    constructor() {\n        this.listenerActive = false;\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n        // Setup state listeners\n        if (isBrowser()) {\n            document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n            this.listenerActive = true;\n        }\n    }\n    addStateChangeListener(listener, notifyOnAdd = false) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.add(listener);\n        // Notify new handlers of the current status on add\n        if (notifyOnAdd) {\n            listener(this.getSessionState());\n        }\n    }\n    removeStateChangeListener(handler) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.delete(handler);\n    }\n    handleVisibilityChange() {\n        this.notifyHandlers();\n    }\n    notifyHandlers() {\n        const sessionState = this.getSessionState();\n        stateChangeListeners.forEach(listener => {\n            listener(sessionState);\n        });\n    }\n    getSessionState() {\n        if (isBrowser() && document.visibilityState !== 'hidden') {\n            return 'started';\n        }\n        // If, for any reason, document is undefined the session will never start\n        return 'ended';\n    }\n}\n"],"mappings":";;AAAA;AACA;AAEA,MAAMA,oBAAoB,GAAG,IAAIC,GAAG,EAAE;AAC/B,MAAMC,eAAe,CAAC;EACzBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5E;IACQ,IAAIC,SAAS,EAAE,EAAE;MACbC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAACJ,sBAAsB,EAAE,KAAK,CAAC;MACjF,IAAI,CAACD,cAAc,GAAG,IAAI;IACtC;EACA;EACIM,sBAAsBA,CAACC,QAAQ,EAAEC,WAAW,GAAG,KAAK,EAAE;IAC1D;IACQ,IAAI,CAAC,IAAI,CAACR,cAAc,EAAE;MACtB;IACZ;IACQJ,oBAAoB,CAACa,GAAG,CAACF,QAAQ,CAAC;IAC1C;IACQ,IAAIC,WAAW,EAAE;MACbD,QAAQ,CAAC,IAAI,CAACG,eAAe,EAAE,CAAC;IAC5C;EACA;EACIC,yBAAyBA,CAACC,OAAO,EAAE;IACvC;IACQ,IAAI,CAAC,IAAI,CAACZ,cAAc,EAAE;MACtB;IACZ;IACQJ,oBAAoB,CAACiB,MAAM,CAACD,OAAO,CAAC;EAC5C;EACIX,sBAAsBA,CAAA,EAAG;IACrB,IAAI,CAACa,cAAc,EAAE;EAC7B;EACIA,cAAcA,CAAA,EAAG;IACb,MAAMC,YAAY,GAAG,IAAI,CAACL,eAAe,EAAE;IAC3Cd,oBAAoB,CAACoB,OAAO,CAACT,QAAQ,IAAI;MACrCA,QAAQ,CAACQ,YAAY,CAAC;IAClC,CAAS,CAAC;EACV;EACIL,eAAeA,CAAA,EAAG;IACd,IAAIP,SAAS,EAAE,IAAIC,QAAQ,CAACa,eAAe,KAAK,QAAQ,EAAE;MACtD,OAAO,SAAS;IAC5B;IACA;IACQ,OAAO,OAAO;EACtB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}