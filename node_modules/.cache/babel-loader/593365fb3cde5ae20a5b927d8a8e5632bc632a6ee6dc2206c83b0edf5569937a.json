{"ast":null,"code":"import { getBytesFromHex } from './getBytesFromHex.mjs';\nimport { WordArray } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nconst getRandomBytes = nBytes => {\n  const str = new WordArray().random(nBytes).toString();\n  return getBytesFromHex(str);\n};\nexport { getRandomBytes };","map":{"version":3,"names":["getRandomBytes","nBytes","str","WordArray","random","toString","getBytesFromHex"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\srp\\getRandomBytes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBytesFromHex } from './getBytesFromHex';\nimport { WordArray } from '@aws-amplify/core/internals/utils';\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nexport const getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,cAAc,GAAIC,MAAM,IAAK;EACtC,MAAMC,GAAG,GAAG,IAAIC,SAAS,EAAE,CAACC,MAAM,CAACH,MAAM,CAAC,CAACI,QAAQ,EAAE;EACrD,OAAOC,eAAe,CAACJ,GAAG,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}