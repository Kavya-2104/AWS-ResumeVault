{"ast":null,"code":"import * as React from 'react';\nimport { useLayoutEffect } from './useLayoutEffect.mjs';\n\n// Adapted from https://github.com/radix-ui/primitives/blob/main/packages/react/id/src/id.tsx#L8\n// Prefixed autogenerated id created by useStableId\nconst AUTO_GENERATED_ID_PREFIX = 'amplify-id';\n// Create a local version of React.useId which will reference React.useId for React 18\n// and fallback to noop for React 17 and below\n// Note: We use `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\n// since it doesn't exist in React 17 and below (prevents https://github.com/aws-amplify/amplify-ui/issues/1154)\nconst useReactId =\n// disable eslint below to allow usage of casting React to `any`, which ensures that TS\n// does not get confused about the existence of `useId` in React 17 and below\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nReact['useId'.toString()] || (() => undefined);\nlet count = 0;\n/**\n * Create a uuid to use with amplify fields unless\n * an id is provided\n * @param id user specified id\n * @returns string\n */\nconst useStableId = id => {\n  const [stableId, setStableId] = React.useState(useReactId());\n  // React versions older than 18 will have client-side ids only\n  useLayoutEffect(() => {\n    if (!id) {\n      setStableId(reactId => reactId ?? String(count++));\n    }\n  }, [id]);\n  return id ?? (stableId ? `${AUTO_GENERATED_ID_PREFIX}-${stableId}` : '');\n};\nexport { AUTO_GENERATED_ID_PREFIX, useStableId };","map":{"version":3,"names":["React","useLayoutEffect","AUTO_GENERATED_ID_PREFIX","useReactId","toString","undefined","count","useStableId","id","stableId","setStableId","useState","reactId","String"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/useStableId.mjs"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from './useLayoutEffect.mjs';\n\n// Adapted from https://github.com/radix-ui/primitives/blob/main/packages/react/id/src/id.tsx#L8\n// Prefixed autogenerated id created by useStableId\nconst AUTO_GENERATED_ID_PREFIX = 'amplify-id';\n// Create a local version of React.useId which will reference React.useId for React 18\n// and fallback to noop for React 17 and below\n// Note: We use `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\n// since it doesn't exist in React 17 and below (prevents https://github.com/aws-amplify/amplify-ui/issues/1154)\nconst useReactId = \n// disable eslint below to allow usage of casting React to `any`, which ensures that TS\n// does not get confused about the existence of `useId` in React 17 and below\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nReact['useId'.toString()] || (() => undefined);\nlet count = 0;\n/**\n * Create a uuid to use with amplify fields unless\n * an id is provided\n * @param id user specified id\n * @returns string\n */\nconst useStableId = (id) => {\n    const [stableId, setStableId] = React.useState(useReactId());\n    // React versions older than 18 will have client-side ids only\n    useLayoutEffect(() => {\n        if (!id) {\n            setStableId((reactId) => reactId ?? String(count++));\n        }\n    }, [id]);\n    return id ?? (stableId ? `${AUTO_GENERATED_ID_PREFIX}-${stableId}` : '');\n};\n\nexport { AUTO_GENERATED_ID_PREFIX, useStableId };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,QAAQ,uBAAuB;;AAEvD;AACA;AACA,MAAMC,wBAAwB,GAAG,YAAY;AAC7C;AACA;AACA;AACA;AACA,MAAMC,UAAU;AAChB;AACA;AACA;AACAH,KAAK,CAAC,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAMC,SAAS,CAAC;AAC9C,IAAIC,KAAK,GAAG,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAIC,EAAE,IAAK;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAACR,UAAU,CAAC,CAAC,CAAC;EAC5D;EACAF,eAAe,CAAC,MAAM;IAClB,IAAI,CAACO,EAAE,EAAE;MACLE,WAAW,CAAEE,OAAO,IAAKA,OAAO,IAAIC,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IACxD;EACJ,CAAC,EAAE,CAACE,EAAE,CAAC,CAAC;EACR,OAAOA,EAAE,KAAKC,QAAQ,GAAI,GAAEP,wBAAyB,IAAGO,QAAS,EAAC,GAAG,EAAE,CAAC;AAC5E,CAAC;AAED,SAASP,wBAAwB,EAAEK,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}