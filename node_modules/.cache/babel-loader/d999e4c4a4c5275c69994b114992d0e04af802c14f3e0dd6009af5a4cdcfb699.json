{"ast":null,"code":"import { Md5 } from '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport './client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport './client/runtime/s3TransferHandler/xhr.mjs';\nimport { utf8Encode, toBase64 } from './client/runtime/base64/index.native.mjs';\nimport '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst calculateContentMd5 = async content => {\n  const hasher = new Md5();\n  if (typeof content === 'string') {\n    hasher.update(content);\n  } else if (ArrayBuffer.isView(content) || content instanceof ArrayBuffer) {\n    const blob = new Blob([content]);\n    const buffer = await readFileToBase64(blob);\n    hasher.update(buffer);\n  } else {\n    const buffer = await readFileToBase64(content);\n    hasher.update(utf8Encode(buffer));\n  }\n  const digest = await hasher.digest();\n  return toBase64(digest);\n};\nconst readFileToBase64 = blob => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n      // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState\n      if (reader.readyState !== 2) {\n        reject(new Error('Reader aborted too early'));\n        return;\n      }\n      resolve(reader.result.split(',')[1]);\n    };\n    reader.onabort = () => {\n      reject(new Error('Read aborted'));\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    // reader.readAsArrayBuffer is not available in RN\n    reader.readAsDataURL(blob);\n  });\n};\nexport { calculateContentMd5 };","map":{"version":3,"names":["calculateContentMd5","content","hasher","Md5","update","ArrayBuffer","isView","blob","Blob","buffer","readFileToBase64","utf8Encode","digest","toBase64","Promise","resolve","reject","reader","FileReader","onloadend","readyState","Error","result","split","onabort","onerror","error","readAsDataURL"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\md5.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Md5 } from '@smithy/md5-js';\nimport { toBase64, utf8Encode } from './client/utils';\nexport const calculateContentMd5 = async (content) => {\n    const hasher = new Md5();\n    if (typeof content === 'string') {\n        hasher.update(content);\n    }\n    else if (ArrayBuffer.isView(content) || content instanceof ArrayBuffer) {\n        const blob = new Blob([content]);\n        const buffer = await readFileToBase64(blob);\n        hasher.update(buffer);\n    }\n    else {\n        const buffer = await readFileToBase64(content);\n        hasher.update(utf8Encode(buffer));\n    }\n    const digest = await hasher.digest();\n    return toBase64(digest);\n};\nconst readFileToBase64 = (blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n            // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState\n            if (reader.readyState !== 2) {\n                reject(new Error('Reader aborted too early'));\n                return;\n            }\n            resolve(reader.result.split(',')[1]);\n        };\n        reader.onabort = () => {\n            reject(new Error('Read aborted'));\n        };\n        reader.onerror = () => {\n            reject(reader.error);\n        };\n        // reader.readAsArrayBuffer is not available in RN\n        reader.readAsDataURL(blob);\n    });\n};\n"],"mappings":";;;;;;;;AAAA;AACA;AAGY,MAACA,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,MAAMC,MAAM,GAAG,IAAIC,GAAG,EAAE;EACxB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;IAC7BC,MAAM,CAACE,MAAM,CAACH,OAAO,CAAC;EAC9B,CAAK,MACI,IAAII,WAAW,CAACC,MAAM,CAACL,OAAO,CAAC,IAAIA,OAAO,YAAYI,WAAW,EAAE;IACpE,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACP,OAAO,CAAC,CAAC;IAChC,MAAMQ,MAAM,GAAG,MAAMC,gBAAgB,CAACH,IAAI,CAAC;IAC3CL,MAAM,CAACE,MAAM,CAACK,MAAM,CAAC;EAC7B,CAAK,MACI;IACD,MAAMA,MAAM,GAAG,MAAMC,gBAAgB,CAACT,OAAO,CAAC;IAC9CC,MAAM,CAACE,MAAM,CAACO,UAAU,CAACF,MAAM,CAAC,CAAC;EACzC;EACI,MAAMG,MAAM,GAAG,MAAMV,MAAM,CAACU,MAAM,EAAE;EACpC,OAAOC,QAAQ,CAACD,MAAM,CAAC;AAC3B;AACA,MAAMF,gBAAgB,GAAIH,IAAI,IAAK;EAC/B,OAAO,IAAIO,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACjC;MACA;MACA;MACY,IAAIF,MAAM,CAACG,UAAU,KAAK,CAAC,EAAE;QACzBJ,MAAM,CAAC,IAAIK,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C;MAChB;MACYN,OAAO,CAACE,MAAM,CAACK,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAS;IACDN,MAAM,CAACO,OAAO,GAAG,MAAM;MACnBR,MAAM,CAAC,IAAIK,KAAK,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAS;IACDJ,MAAM,CAACQ,OAAO,GAAG,MAAM;MACnBT,MAAM,CAACC,MAAM,CAACS,KAAK,CAAC;IAChC,CAAS;IACT;IACQT,MAAM,CAACU,aAAa,CAACpB,IAAI,CAAC;EAClC,CAAK,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}