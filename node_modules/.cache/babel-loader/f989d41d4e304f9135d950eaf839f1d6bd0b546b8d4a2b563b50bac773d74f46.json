{"ast":null,"code":"import { HEX_TO_SHORT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nconst getBytesFromHex = encoded => {\n  if (encoded.length % 2 !== 0) {\n    throw new Error('Hex encoded strings must have an even number length');\n  }\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n  return out;\n};\nexport { getBytesFromHex };","map":{"version":3,"names":["getBytesFromHex","encoded","length","Error","out","Uint8Array","i","encodedByte","slice","toLowerCase","HEX_TO_SHORT"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\utils\\srp\\getBytesFromHex.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_SHORT } from './constants';\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport const getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACY,MAACA,eAAe,GAAIC,OAAO,IAAK;EACxC,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EAC9E;EACI,MAAMC,GAAG,GAAG,IAAIC,UAAU,CAACJ,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;EAC9C,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACC,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;IACxC,MAAMC,WAAW,GAAGN,OAAO,CAACO,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAACG,WAAW,EAAE;IACzD,IAAIF,WAAW,IAAIG,YAAY,EAAE;MAC7BN,GAAG,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGI,YAAY,CAACH,WAAW,CAAC;IAClD,CAAS,MACI;MACD,MAAM,IAAIJ,KAAK,CAAE,uCAAsCI,WAAY,iBAAgB,CAAC;IAChG;EACA;EACI,OAAOH,GAAG;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}