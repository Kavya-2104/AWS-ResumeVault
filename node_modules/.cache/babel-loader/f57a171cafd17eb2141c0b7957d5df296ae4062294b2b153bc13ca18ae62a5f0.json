{"ast":null,"code":"import { defaultStorage } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\nimport { DefaultTokenStore } from './TokenStore.mjs';\nimport { TokenOrchestrator } from './TokenOrchestrator.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CognitoUserPoolsTokenProvider {\n  constructor() {\n    this.authTokenStore = new DefaultTokenStore();\n    this.authTokenStore.setKeyValueStorage(defaultStorage);\n    this.tokenOrchestrator = new TokenOrchestrator();\n    this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n    this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n  }\n  getTokens({\n    forceRefresh\n  } = {\n    forceRefresh: false\n  }) {\n    return this.tokenOrchestrator.getTokens({\n      forceRefresh\n    });\n  }\n  setKeyValueStorage(keyValueStorage) {\n    this.authTokenStore.setKeyValueStorage(keyValueStorage);\n  }\n  setWaitForInflightOAuth(waitForInflightOAuth) {\n    this.tokenOrchestrator.setWaitForInflightOAuth(waitForInflightOAuth);\n  }\n  setAuthConfig(authConfig) {\n    this.authTokenStore.setAuthConfig(authConfig);\n    this.tokenOrchestrator.setAuthConfig(authConfig);\n  }\n}\nexport { CognitoUserPoolsTokenProvider };","map":{"version":3,"names":["CognitoUserPoolsTokenProvider","constructor","authTokenStore","DefaultTokenStore","setKeyValueStorage","defaultStorage","tokenOrchestrator","TokenOrchestrator","setAuthTokenStore","setTokenRefresher","refreshAuthTokens","getTokens","forceRefresh","keyValueStorage","setWaitForInflightOAuth","waitForInflightOAuth","setAuthConfig","authConfig"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\tokenProvider\\CognitoUserPoolsTokenProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setWaitForInflightOAuth(waitForInflightOAuth) {\n        this.tokenOrchestrator.setWaitForInflightOAuth(waitForInflightOAuth);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n"],"mappings":";;;;;AAAA;AACA;AAKO,MAAMA,6BAA6B,CAAC;EACvCC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,cAAc,GAAG,IAAIC,iBAAiB,EAAE;IAC7C,IAAI,CAACD,cAAc,CAACE,kBAAkB,CAACC,cAAc,CAAC;IACtD,IAAI,CAACC,iBAAiB,GAAG,IAAIC,iBAAiB,EAAE;IAChD,IAAI,CAACD,iBAAiB,CAACE,iBAAiB,CAAC,IAAI,CAACN,cAAc,CAAC;IAC7D,IAAI,CAACI,iBAAiB,CAACG,iBAAiB,CAACC,iBAAiB,CAAC;EACnE;EACIC,SAASA,CAAC;IAAEC;EAAY,CAAE,GAAG;IAAEA,YAAY,EAAE;EAAK,CAAE,EAAE;IAClD,OAAO,IAAI,CAACN,iBAAiB,CAACK,SAAS,CAAC;MAAEC;IAAY,CAAE,CAAC;EACjE;EACIR,kBAAkBA,CAACS,eAAe,EAAE;IAChC,IAAI,CAACX,cAAc,CAACE,kBAAkB,CAACS,eAAe,CAAC;EAC/D;EACIC,uBAAuBA,CAACC,oBAAoB,EAAE;IAC1C,IAAI,CAACT,iBAAiB,CAACQ,uBAAuB,CAACC,oBAAoB,CAAC;EAC5E;EACIC,aAAaA,CAACC,UAAU,EAAE;IACtB,IAAI,CAACf,cAAc,CAACc,aAAa,CAACC,UAAU,CAAC;IAC7C,IAAI,CAACX,iBAAiB,CAACU,aAAa,CAACC,UAAU,CAAC;EACxD;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}