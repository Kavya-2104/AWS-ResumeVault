{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { calculateContentMd5 } from '../../utils/md5.mjs';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport '../../../../utils/logger.mjs';\nimport '../../utils/client/base.mjs';\nimport '../../utils/client/getObject.mjs';\nimport '../../utils/client/listObjectsV2.mjs';\nimport { putObject } from '../../utils/client/putObject.mjs';\nimport '../../utils/client/createMultipartUpload.mjs';\nimport '../../utils/client/uploadPart.mjs';\nimport '../../utils/client/completeMultipartUpload.mjs';\nimport '../../utils/client/listParts.mjs';\nimport '../../utils/client/abortMultipartUpload.mjs';\nimport '../../utils/client/copyObject.mjs';\nimport '../../utils/client/headObject.mjs';\nimport '../../utils/client/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get a function the returns a promise to call putObject API to S3.\n *\n * @internal\n */\nconst putObjectJob = ({\n  options: uploadDataOptions,\n  key,\n  data\n}, abortSignal, totalLength) => async () => {\n  const {\n    bucket,\n    keyPrefix,\n    s3Config,\n    isObjectLockEnabled\n  } = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n  const finalKey = keyPrefix + key;\n  const {\n    contentDisposition,\n    contentEncoding,\n    contentType = 'application/octet-stream',\n    metadata,\n    onProgress\n  } = uploadDataOptions ?? {};\n  const {\n    ETag: eTag,\n    VersionId: versionId\n  } = await putObject({\n    ...s3Config,\n    abortSignal,\n    onUploadProgress: onProgress,\n    userAgentValue: getStorageUserAgentValue(StorageAction.UploadData)\n  }, {\n    Bucket: bucket,\n    Key: finalKey,\n    Body: data,\n    ContentType: contentType,\n    ContentDisposition: contentDisposition,\n    ContentEncoding: contentEncoding,\n    Metadata: metadata,\n    ContentMD5: isObjectLockEnabled ? await calculateContentMd5(data) : undefined\n  });\n  return {\n    key,\n    eTag,\n    versionId,\n    contentType,\n    metadata,\n    size: totalLength\n  };\n};\nexport { putObjectJob };","map":{"version":3,"names":["putObjectJob","options","uploadDataOptions","key","data","abortSignal","totalLength","bucket","keyPrefix","s3Config","isObjectLockEnabled","resolveS3ConfigAndInput","Amplify","finalKey","contentDisposition","contentEncoding","contentType","metadata","onProgress","ETag","eTag","VersionId","versionId","putObject","onUploadProgress","userAgentValue","getStorageUserAgentValue","StorageAction","UploadData","Bucket","Key","Body","ContentType","ContentDisposition","ContentEncoding","Metadata","ContentMD5","calculateContentMd5","undefined","size"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\uploadData\\putObjectJob.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { calculateContentMd5, resolveS3ConfigAndInput } from '../../utils';\nimport { putObject } from '../../utils/client';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\n/**\n * Get a function the returns a promise to call putObject API to S3.\n *\n * @internal\n */\nexport const putObjectJob = ({ options: uploadDataOptions, key, data }, abortSignal, totalLength) => async () => {\n    const { bucket, keyPrefix, s3Config, isObjectLockEnabled } = await resolveS3ConfigAndInput(Amplify, uploadDataOptions);\n    const finalKey = keyPrefix + key;\n    const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', metadata, onProgress, } = uploadDataOptions ?? {};\n    const { ETag: eTag, VersionId: versionId } = await putObject({\n        ...s3Config,\n        abortSignal,\n        onUploadProgress: onProgress,\n        userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        Body: data,\n        ContentType: contentType,\n        ContentDisposition: contentDisposition,\n        ContentEncoding: contentEncoding,\n        Metadata: metadata,\n        ContentMD5: isObjectLockEnabled\n            ? await calculateContentMd5(data)\n            : undefined,\n    });\n    return {\n        key,\n        eTag,\n        versionId,\n        contentType,\n        metadata,\n        size: totalLength,\n    };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACY,MAACA,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,iBAAiB;EAAEC,GAAG;EAAEC;AAAI,CAAE,EAAEC,WAAW,EAAEC,WAAW,KAAK,YAAY;EAC7G,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAmB,CAAE,GAAG,MAAMC,uBAAuB,CAACC,OAAO,EAAEV,iBAAiB,CAAC;EACtH,MAAMW,QAAQ,GAAGL,SAAS,GAAGL,GAAG;EAChC,MAAM;IAAEW,kBAAkB;IAAEC,eAAe;IAAEC,WAAW,GAAG,0BAA0B;IAAEC,QAAQ;IAAEC;EAAU,CAAG,GAAGhB,iBAAiB,IAAI,EAAE;EACxI,MAAM;IAAEiB,IAAI,EAAEC,IAAI;IAAEC,SAAS,EAAEC;EAAS,CAAE,GAAG,MAAMC,SAAS,CAAC;IACzD,GAAGd,QAAQ;IACXJ,WAAW;IACXmB,gBAAgB,EAAEN,UAAU;IAC5BO,cAAc,EAAEC,wBAAwB,CAACC,aAAa,CAACC,UAAU;EACzE,CAAK,EAAE;IACCC,MAAM,EAAEtB,MAAM;IACduB,GAAG,EAAEjB,QAAQ;IACbkB,IAAI,EAAE3B,IAAI;IACV4B,WAAW,EAAEhB,WAAW;IACxBiB,kBAAkB,EAAEnB,kBAAkB;IACtCoB,eAAe,EAAEnB,eAAe;IAChCoB,QAAQ,EAAElB,QAAQ;IAClBmB,UAAU,EAAE1B,mBAAmB,GACzB,MAAM2B,mBAAmB,CAACjC,IAAI,CAAC,GAC/BkC;EACd,CAAK,CAAC;EACF,OAAO;IACHnC,GAAG;IACHiB,IAAI;IACJE,SAAS;IACTN,WAAW;IACXC,QAAQ;IACRsB,IAAI,EAAEjC;EACd,CAAK;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}