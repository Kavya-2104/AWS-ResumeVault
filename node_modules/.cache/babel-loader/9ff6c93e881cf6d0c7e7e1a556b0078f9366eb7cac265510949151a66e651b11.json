{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst ChangeCase = require('change-case');\nconst reduce = function (obj, f, accumulator_init) {\n  return Object.keys(obj || {}).reduce((accumulator, key) => {\n    let value = obj[key];\n    return f(accumulator, value, key, obj);\n  }, accumulator_init);\n};\nconst forEach = function (obj, f) {\n  Object.keys(obj || {}).forEach(key => {\n    let value = obj[key];\n    f(value, key);\n  });\n};\n\n// Note: This is a crappy version to a certain extent... don't use with Strings, for example...\nconst clone = function (object) {\n  return Object.assign(new object.constructor(), object);\n};\nconst cloneDeep = function (obj) {\n  if (obj === null || obj === undefined || typeof obj !== 'object') {\n    return obj;\n  }\n  if (obj instanceof Array) {\n    return obj.reduce((arr, item, i) => {\n      arr[i] = cloneDeep(item);\n      return arr;\n    }, []);\n  }\n  if (obj instanceof Object) {\n    return Object.keys(obj || {}).reduce((cpObj, key) => {\n      cpObj[key] = cloneDeep(obj[key]);\n      return cpObj;\n    }, {});\n  }\n};\nconst isObject = function (value) {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n};\nconst isString = function (obj) {\n  return typeof obj === 'string' || obj instanceof String;\n};\nconst isArray = function (obj) {\n  return Array.isArray(obj);\n};\nconst isEmpty = function (obj) {\n  return [Object, Array].includes((obj || {}).constructor) && !Object.entries(obj || {}).length;\n};\nfunction isPlainObject(value) {\n  if (typeof value !== 'object' || value === null || Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n  if (Object.getPrototypeOf(value) === null) {\n    return true;\n  }\n  let proto = value;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(value) === proto;\n}\nconst filter = function (arr, filter) {\n  if (typeof filter !== 'function') {\n    throw \"filter is not a function\";\n  }\n  if (typeof arr === 'undefined') {\n    return [];\n  }\n  return arr.filter(filter);\n};\nconst assign = function () {\n  let args = Array.prototype.slice.call(arguments);\n  args.unshift({});\n  return Object.assign(...args);\n};\n\n/* global Set */\nconst pull = function (arr, ...removeList) {\n  var removeSet = new Set(removeList);\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (removeSet.has(arr[i])) {\n      arr.splice(i, 1);\n    }\n  }\n};\nconst unique = function (arr) {\n  return [...new Set(arr)];\n};\nconst upperFirst = function (str) {\n  return str ? str[0].toUpperCase() + str.substr(1) : '';\n};\nconst matchFn = function (inputObj, testObj) {\n  if (isObject(testObj)) {\n    return Object.keys(testObj).every(key => matchFn(inputObj[key], testObj[key]));\n  } else {\n    return inputObj == testObj;\n  }\n};\nconst matches = function (matchObj) {\n  let cloneObj = cloneDeep(matchObj);\n  let matchesFn = inputObj => matchFn(inputObj, cloneObj);\n  return matchesFn;\n};\nconst DEFAULT_OPTIONS = {\n  transform: ChangeCase.camelCaseTransformMerge\n};\nconst changeDefaultCaseTransform = function (caseFunction, default_options) {\n  return (caseToChange, options) => caseFunction(caseToChange, Object.assign({}, DEFAULT_OPTIONS, default_options, options));\n};\nmodule.exports = {\n  each: forEach,\n  forEach: forEach,\n  forIn: forEach,\n  keys: Object.keys,\n  clone: clone,\n  cloneDeep: cloneDeep,\n  extend: Object.assign,\n  isString: isString,\n  isArray: isArray,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmpty: isEmpty,\n  filter: filter,\n  reduce: reduce,\n  assign: assign,\n  upperFirst: upperFirst,\n  camelCase: changeDefaultCaseTransform(ChangeCase.camelCase),\n  snakeCase: ChangeCase.snakeCase,\n  kebabCase: ChangeCase.paramCase,\n  pull: pull,\n  matches: matches,\n  unique: unique\n};","map":{"version":3,"names":["ChangeCase","require","reduce","obj","f","accumulator_init","Object","keys","accumulator","key","value","forEach","clone","object","assign","constructor","cloneDeep","undefined","Array","arr","item","i","cpObj","isObject","type","isString","String","isArray","isEmpty","includes","entries","length","isPlainObject","prototype","toString","call","getPrototypeOf","proto","filter","args","slice","arguments","unshift","pull","removeList","removeSet","Set","has","splice","unique","upperFirst","str","toUpperCase","substr","matchFn","inputObj","testObj","every","matches","matchObj","cloneObj","matchesFn","DEFAULT_OPTIONS","transform","camelCaseTransformMerge","changeDefaultCaseTransform","caseFunction","default_options","caseToChange","options","module","exports","each","forIn","extend","camelCase","snakeCase","kebabCase","paramCase"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/style-dictionary/lib/utils/es6_.js"],"sourcesContent":["/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst ChangeCase = require('change-case')\n\nconst reduce = function(obj, f, accumulator_init) {\n  return Object.keys(obj || {}).reduce((accumulator, key) => {\n    let value = obj[key]\n    return f(accumulator, value, key, obj)\n  }, accumulator_init)\n}\n\nconst forEach = function(obj, f) {\n  Object.keys(obj || {}).forEach((key) => {\n    let value = obj[key]\n    f(value, key)\n  });\n}\n\n// Note: This is a crappy version to a certain extent... don't use with Strings, for example...\nconst clone = function(object) {\n  return Object.assign(new object.constructor(), object)\n}\n\nconst cloneDeep = function(obj) {\n  if(obj === null || obj === undefined || typeof obj !== 'object') {\n    return obj\n  }\n\n  if(obj instanceof Array) {\n    return obj.reduce((arr, item, i) => {\n      arr[i] = cloneDeep(item)\n      return arr\n    }, [])\n  }\n\n  if(obj instanceof Object) {\n    return Object.keys(obj || {}).reduce((cpObj, key) => {\n      cpObj[key] = cloneDeep(obj[key])\n      return cpObj\n    }, {})\n  }\n}\n\nconst isObject = function(value) {\n  const type = typeof value\n  return value != null && (type === 'object' || type === 'function')\n}\n\nconst isString = function(obj) {\n  return typeof obj === 'string' || obj instanceof String\n}\n\nconst isArray = function(obj) {\n  return Array.isArray(obj)\n}\n\nconst isEmpty = function(obj) {\n  return [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length\n}\n\nfunction isPlainObject(value) {\n  if (typeof value !== 'object' || value === null || Object.prototype.toString.call(value) !== '[object Object]') {\n    return false\n  }\n  if (Object.getPrototypeOf(value) === null) {\n    return true\n  }\n  let proto = value\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n  return Object.getPrototypeOf(value) === proto\n}\n\nconst filter = function (arr, filter) {\n  if (typeof(filter) !== 'function') {\n    throw(\"filter is not a function\")\n  }\n  if (typeof arr === 'undefined') {\n    return []\n  }\n  return arr.filter(filter)\n}\n\nconst assign = function () {\n  let args = Array.prototype.slice.call(arguments)\n  args.unshift({})\n  return Object.assign(...args)\n}\n\n/* global Set */\nconst pull = function (arr, ...removeList){\n  var removeSet = new Set(removeList)\n  for (let i=arr.length-1;i>=0;i--) {\n      if (removeSet.has(arr[i])) {\n        arr.splice(i, 1)\n      }\n  }\n}\n\nconst unique = function (arr){\n  return [...new Set(arr)]\n}\n\nconst upperFirst = function (str) {\n  return str ? str[0].toUpperCase() + str.substr(1) : ''\n}\n\nconst matchFn = function(inputObj, testObj) {\n  if (isObject(testObj)) {\n    return Object.keys(testObj).every((key) => matchFn(inputObj[key], testObj[key]))\n  }\n  else {\n    return inputObj == testObj\n  }\n}\n\nconst matches = function (matchObj) {\n  let cloneObj = cloneDeep(matchObj)\n  let matchesFn = (inputObj) => matchFn(inputObj, cloneObj)\n  return matchesFn\n}\n\nconst DEFAULT_OPTIONS = {\n  transform: ChangeCase.camelCaseTransformMerge\n}\nconst changeDefaultCaseTransform = function (caseFunction, default_options) {\n  return (caseToChange, options) => caseFunction(caseToChange, Object.assign({}, DEFAULT_OPTIONS, default_options, options))\n}\n\nmodule.exports = {\n  each: forEach,\n  forEach: forEach,\n  forIn: forEach,\n  keys: Object.keys,\n  clone: clone,\n  cloneDeep: cloneDeep,\n  extend: Object.assign,\n  isString: isString,\n  isArray: isArray,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isEmpty: isEmpty,\n  filter: filter,\n  reduce: reduce,\n  assign: assign,\n  upperFirst: upperFirst,\n  camelCase: changeDefaultCaseTransform(ChangeCase.camelCase),\n  snakeCase: ChangeCase.snakeCase,\n  kebabCase: ChangeCase.paramCase,\n  pull: pull,\n  matches: matches,\n  unique: unique,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}