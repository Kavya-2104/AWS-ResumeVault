{"ast":null,"code":"import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCurrentUser = async amplify => {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const tokens = await amplify.Auth.getTokens({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const {\n    'cognito:username': username,\n    sub\n  } = tokens.idToken?.payload ?? {};\n  const authUser = {\n    username: username,\n    userId: sub\n  };\n  const signInDetails = getSignInDetailsFromTokens(tokens);\n  if (signInDetails) {\n    authUser.signInDetails = signInDetails;\n  }\n  return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n  return tokens?.signInDetails;\n}\nexport { getCurrentUser };","map":{"version":3,"names":["getCurrentUser","amplify","authConfig","getConfig","Auth","Cognito","assertTokenProviderConfig","tokens","getTokens","forceRefresh","assertAuthTokens","username","sub","idToken","payload","authUser","userId","signInDetails","getSignInDetailsFromTokens"],"sources":["E:\\CSC-PROJECT\\amplify-react-app\\node_modules\\@aws-amplify\\auth\\src\\providers\\cognito\\apis\\internal\\getCurrentUser.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n"],"mappings":";;;AAAA;AACA;AAGY,MAACA,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC7C,MAAMC,UAAU,GAAGD,OAAO,CAACE,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACJ,UAAU,CAAC;EACrC,MAAMK,MAAM,GAAG,MAAMN,OAAO,CAACG,IAAI,CAACI,SAAS,CAAC;IAAEC,YAAY,EAAE;EAAK,CAAE,CAAC;EACpEC,gBAAgB,CAACH,MAAM,CAAC;EACxB,MAAM;IAAE,kBAAkB,EAAEI,QAAQ;IAAEC;EAAG,CAAE,GAAGL,MAAM,CAACM,OAAO,EAAEC,OAAO,IAAI,EAAE;EAC3E,MAAMC,QAAQ,GAAG;IACbJ,QAAQ,EAAEA,QAAQ;IAClBK,MAAM,EAAEJ;EAChB,CAAK;EACD,MAAMK,aAAa,GAAGC,0BAA0B,CAACX,MAAM,CAAC;EACxD,IAAIU,aAAa,EAAE;IACfF,QAAQ,CAACE,aAAa,GAAGA,aAAa;EAC9C;EACI,OAAOF,QAAQ;AACnB;AACA,SAASG,0BAA0BA,CAACX,MAAM,EAAE;EACxC,OAAOA,MAAM,EAAEU,aAAa;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}