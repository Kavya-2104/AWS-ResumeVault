{"ast":null,"code":"import * as React from 'react';\nconst usePagination = props => {\n  const {\n    currentPage: initialPage = 1,\n    totalPages,\n    hasMorePages = false,\n    siblingCount = 1\n  } = props;\n  // The current page should not be less than 1\n  const sanitizedInitialPage = Math.max(initialPage, 1);\n  // The total pages should be always greater than current page\n  const sanitizedTotalPages = Math.max(sanitizedInitialPage, totalPages);\n  const [currentPage, setCurrentPage] = React.useState(sanitizedInitialPage);\n  // Reset current page if initialPage or totalPages changes\n  React.useEffect(() => {\n    setCurrentPage(sanitizedInitialPage);\n  }, [sanitizedInitialPage, sanitizedTotalPages]);\n  const onNext = React.useCallback(() => {\n    if (currentPage < sanitizedTotalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  }, [currentPage, sanitizedTotalPages]);\n  const onPrevious = React.useCallback(() => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  }, [currentPage]);\n  const onChange = React.useCallback(newPageIndex => {\n    if (typeof newPageIndex === 'number') {\n      setCurrentPage(newPageIndex);\n    }\n  }, []);\n  return {\n    currentPage,\n    hasMorePages,\n    onChange,\n    onNext,\n    onPrevious,\n    // The sibling count should not be less than 1\n    siblingCount: Math.max(siblingCount, 1),\n    totalPages: sanitizedTotalPages\n  };\n};\nexport { usePagination };","map":{"version":3,"names":["React","usePagination","props","currentPage","initialPage","totalPages","hasMorePages","siblingCount","sanitizedInitialPage","Math","max","sanitizedTotalPages","setCurrentPage","useState","useEffect","onNext","useCallback","onPrevious","onChange","newPageIndex"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/usePagination.mjs"],"sourcesContent":["import * as React from 'react';\n\nconst usePagination = (props) => {\n    const { currentPage: initialPage = 1, totalPages, hasMorePages = false, siblingCount = 1, } = props;\n    // The current page should not be less than 1\n    const sanitizedInitialPage = Math.max(initialPage, 1);\n    // The total pages should be always greater than current page\n    const sanitizedTotalPages = Math.max(sanitizedInitialPage, totalPages);\n    const [currentPage, setCurrentPage] = React.useState(sanitizedInitialPage);\n    // Reset current page if initialPage or totalPages changes\n    React.useEffect(() => {\n        setCurrentPage(sanitizedInitialPage);\n    }, [sanitizedInitialPage, sanitizedTotalPages]);\n    const onNext = React.useCallback(() => {\n        if (currentPage < sanitizedTotalPages) {\n            setCurrentPage(currentPage + 1);\n        }\n    }, [currentPage, sanitizedTotalPages]);\n    const onPrevious = React.useCallback(() => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }, [currentPage]);\n    const onChange = React.useCallback((newPageIndex) => {\n        if (typeof newPageIndex === 'number') {\n            setCurrentPage(newPageIndex);\n        }\n    }, []);\n    return {\n        currentPage,\n        hasMorePages,\n        onChange,\n        onNext,\n        onPrevious,\n        // The sibling count should not be less than 1\n        siblingCount: Math.max(siblingCount, 1),\n        totalPages: sanitizedTotalPages,\n    };\n};\n\nexport { usePagination };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,WAAW,EAAEC,WAAW,GAAG,CAAC;IAAEC,UAAU;IAAEC,YAAY,GAAG,KAAK;IAAEC,YAAY,GAAG;EAAG,CAAC,GAAGL,KAAK;EACnG;EACA,MAAMM,oBAAoB,GAAGC,IAAI,CAACC,GAAG,CAACN,WAAW,EAAE,CAAC,CAAC;EACrD;EACA,MAAMO,mBAAmB,GAAGF,IAAI,CAACC,GAAG,CAACF,oBAAoB,EAAEH,UAAU,CAAC;EACtE,MAAM,CAACF,WAAW,EAAES,cAAc,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAACL,oBAAoB,CAAC;EAC1E;EACAR,KAAK,CAACc,SAAS,CAAC,MAAM;IAClBF,cAAc,CAACJ,oBAAoB,CAAC;EACxC,CAAC,EAAE,CAACA,oBAAoB,EAAEG,mBAAmB,CAAC,CAAC;EAC/C,MAAMI,MAAM,GAAGf,KAAK,CAACgB,WAAW,CAAC,MAAM;IACnC,IAAIb,WAAW,GAAGQ,mBAAmB,EAAE;MACnCC,cAAc,CAACT,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,WAAW,EAAEQ,mBAAmB,CAAC,CAAC;EACtC,MAAMM,UAAU,GAAGjB,KAAK,CAACgB,WAAW,CAAC,MAAM;IACvC,IAAIb,WAAW,GAAG,CAAC,EAAE;MACjBS,cAAc,CAACT,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,MAAMe,QAAQ,GAAGlB,KAAK,CAACgB,WAAW,CAAEG,YAAY,IAAK;IACjD,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;MAClCP,cAAc,CAACO,YAAY,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACHhB,WAAW;IACXG,YAAY;IACZY,QAAQ;IACRH,MAAM;IACNE,UAAU;IACV;IACAV,YAAY,EAAEE,IAAI,CAACC,GAAG,CAACH,YAAY,EAAE,CAAC,CAAC;IACvCF,UAAU,EAAEM;EAChB,CAAC;AACL,CAAC;AAED,SAASV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}