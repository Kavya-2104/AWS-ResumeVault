{"ast":null,"code":"import * as React from 'react';\nimport { getMediaQueries } from './getMediaQueries.mjs';\n\n// Inspiration for getMediaQueries and useBreakpoint\nconst useIsomorphicEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\nconst useBreakpoint = ({\n  breakpoints,\n  defaultBreakpoint\n}) => {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const matchMedia = supportMatchMedia ? window.matchMedia : null;\n  const mediaQueries = React.useMemo(() => getMediaQueries({\n    breakpoints\n  }), [breakpoints]);\n  const [breakpoint, setBreakpoint] = React.useState(defaultBreakpoint);\n  const updateBreakpoint = React.useCallback((matches, breakpoint) => {\n    if (matches) {\n      setBreakpoint(breakpoint);\n    }\n  }, [setBreakpoint]);\n  useIsomorphicEffect(() => {\n    if (!matchMedia) return;\n    const unsubscribeList = mediaQueries.map(({\n      query,\n      breakpoint\n    }) => {\n      const queryList = matchMedia(query);\n      updateBreakpoint(queryList.matches, breakpoint);\n      const handleMediaChange = event => {\n        if (event.matches) {\n          setBreakpoint(breakpoint);\n        }\n      };\n      queryList.addEventListener('change', handleMediaChange);\n      return () => queryList.removeEventListener('change', handleMediaChange);\n    });\n    return () => {\n      unsubscribeList.forEach(unsubscribe => unsubscribe());\n    };\n  }, [breakpoints, setBreakpoint, matchMedia, mediaQueries]);\n  /** Print a nice debug value for React Devtools */\n  React.useDebugValue(breakpoint, breakpoint => breakpoint);\n  return breakpoint;\n};\nexport { useBreakpoint };","map":{"version":3,"names":["React","getMediaQueries","useIsomorphicEffect","window","useEffect","useLayoutEffect","useBreakpoint","breakpoints","defaultBreakpoint","supportMatchMedia","matchMedia","mediaQueries","useMemo","breakpoint","setBreakpoint","useState","updateBreakpoint","useCallback","matches","unsubscribeList","map","query","queryList","handleMediaChange","event","addEventListener","removeEventListener","forEach","unsubscribe","useDebugValue"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/useBreakpoint.mjs"],"sourcesContent":["import * as React from 'react';\nimport { getMediaQueries } from './getMediaQueries.mjs';\n\n// Inspiration for getMediaQueries and useBreakpoint\nconst useIsomorphicEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\nconst useBreakpoint = ({ breakpoints, defaultBreakpoint, }) => {\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const matchMedia = supportMatchMedia ? window.matchMedia : null;\n    const mediaQueries = React.useMemo(() => getMediaQueries({ breakpoints }), [breakpoints]);\n    const [breakpoint, setBreakpoint] = React.useState(defaultBreakpoint);\n    const updateBreakpoint = React.useCallback((matches, breakpoint) => {\n        if (matches) {\n            setBreakpoint(breakpoint);\n        }\n    }, [setBreakpoint]);\n    useIsomorphicEffect(() => {\n        if (!matchMedia)\n            return;\n        const unsubscribeList = mediaQueries.map(({ query, breakpoint }) => {\n            const queryList = matchMedia(query);\n            updateBreakpoint(queryList.matches, breakpoint);\n            const handleMediaChange = (event) => {\n                if (event.matches) {\n                    setBreakpoint(breakpoint);\n                }\n            };\n            queryList.addEventListener('change', handleMediaChange);\n            return () => queryList.removeEventListener('change', handleMediaChange);\n        });\n        return () => {\n            unsubscribeList.forEach((unsubscribe) => unsubscribe());\n        };\n    }, [breakpoints, setBreakpoint, matchMedia, mediaQueries]);\n    /** Print a nice debug value for React Devtools */\n    React.useDebugValue(breakpoint, (breakpoint) => breakpoint);\n    return breakpoint;\n};\n\nexport { useBreakpoint };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,QAAQ,uBAAuB;;AAEvD;AACA,MAAMC,mBAAmB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGH,KAAK,CAACI,SAAS,GAAGJ,KAAK,CAACK,eAAe;AACnG,MAAMC,aAAa,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAmB,CAAC,KAAK;EAC3D,MAAMC,iBAAiB,GAAG,OAAON,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACO,UAAU,KAAK,WAAW;EACnG,MAAMA,UAAU,GAAGD,iBAAiB,GAAGN,MAAM,CAACO,UAAU,GAAG,IAAI;EAC/D,MAAMC,YAAY,GAAGX,KAAK,CAACY,OAAO,CAAC,MAAMX,eAAe,CAAC;IAAEM;EAAY,CAAC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACzF,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAACP,iBAAiB,CAAC;EACrE,MAAMQ,gBAAgB,GAAGhB,KAAK,CAACiB,WAAW,CAAC,CAACC,OAAO,EAAEL,UAAU,KAAK;IAChE,IAAIK,OAAO,EAAE;MACTJ,aAAa,CAACD,UAAU,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACC,aAAa,CAAC,CAAC;EACnBZ,mBAAmB,CAAC,MAAM;IACtB,IAAI,CAACQ,UAAU,EACX;IACJ,MAAMS,eAAe,GAAGR,YAAY,CAACS,GAAG,CAAC,CAAC;MAAEC,KAAK;MAAER;IAAW,CAAC,KAAK;MAChE,MAAMS,SAAS,GAAGZ,UAAU,CAACW,KAAK,CAAC;MACnCL,gBAAgB,CAACM,SAAS,CAACJ,OAAO,EAAEL,UAAU,CAAC;MAC/C,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;QACjC,IAAIA,KAAK,CAACN,OAAO,EAAE;UACfJ,aAAa,CAACD,UAAU,CAAC;QAC7B;MACJ,CAAC;MACDS,SAAS,CAACG,gBAAgB,CAAC,QAAQ,EAAEF,iBAAiB,CAAC;MACvD,OAAO,MAAMD,SAAS,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,iBAAiB,CAAC;IAC3E,CAAC,CAAC;IACF,OAAO,MAAM;MACTJ,eAAe,CAACQ,OAAO,CAAEC,WAAW,IAAKA,WAAW,CAAC,CAAC,CAAC;IAC3D,CAAC;EACL,CAAC,EAAE,CAACrB,WAAW,EAAEO,aAAa,EAAEJ,UAAU,EAAEC,YAAY,CAAC,CAAC;EAC1D;EACAX,KAAK,CAAC6B,aAAa,CAAChB,UAAU,EAAGA,UAAU,IAAKA,UAAU,CAAC;EAC3D,OAAOA,UAAU;AACrB,CAAC;AAED,SAASP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}