{"ast":null,"code":"import React__default from 'react';\nimport { FederatedIdentityProviders, authenticatorTextUtil } from '@aws-amplify/ui';\nimport { Divider } from '../../../primitives/Divider/Divider.mjs';\nimport { Flex } from '../../../primitives/Flex/Flex.mjs';\nimport { useAuthenticator } from '@aws-amplify/ui-react-core';\nimport { FederatedSignInButton } from './FederatedSignInButtons/FederatedSignInButton.mjs';\nconst {\n  getSignInWithFederationText,\n  getOrText\n} = authenticatorTextUtil;\nfunction FederatedSignIn() {\n  const {\n    route,\n    socialProviders\n  } = useAuthenticator(({\n    route,\n    socialProviders\n  }) => [route, socialProviders]);\n  if (socialProviders.length === 0) {\n    // @ts-ignore\n    return null;\n  }\n  return React__default.createElement(Flex, {\n    direction: \"column\",\n    padding: `0 0 1rem 0`,\n    className: \"federated-sign-in-container\"\n  }, socialProviders.map(provider => {\n    switch (provider) {\n      case 'amazon':\n        return React__default.createElement(FederatedSignInButton, {\n          icon: \"amazon\",\n          key: provider,\n          provider: FederatedIdentityProviders.Amazon,\n          text: getSignInWithFederationText(route, provider)\n        });\n      case 'apple':\n        return React__default.createElement(FederatedSignInButton, {\n          icon: \"apple\",\n          key: provider,\n          provider: FederatedIdentityProviders.Apple,\n          text: getSignInWithFederationText(route, provider)\n        });\n      case 'facebook':\n        return React__default.createElement(FederatedSignInButton, {\n          icon: \"facebook\",\n          key: provider,\n          provider: FederatedIdentityProviders.Facebook,\n          text: getSignInWithFederationText(route, provider)\n        });\n      case 'google':\n        return React__default.createElement(FederatedSignInButton, {\n          icon: \"google\",\n          key: provider,\n          provider: FederatedIdentityProviders.Google,\n          text: getSignInWithFederationText(route, provider)\n        });\n      default:\n        // eslint-disable-next-line no-console\n        console.error(`Authenticator does not support ${provider}. Please open an issue: https://github.com/aws-amplify/amplify-ui/issues/choose`);\n    }\n  }), React__default.createElement(Divider, {\n    size: \"small\",\n    label: getOrText()\n  }));\n}\nexport { FederatedSignIn };","map":{"version":3,"names":["React__default","FederatedIdentityProviders","authenticatorTextUtil","Divider","Flex","useAuthenticator","FederatedSignInButton","getSignInWithFederationText","getOrText","FederatedSignIn","route","socialProviders","length","createElement","direction","padding","className","map","provider","icon","key","Amazon","text","Apple","Facebook","Google","console","error","size","label"],"sources":["E:/CSC-PROJECT/amplify-react-app/node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/FederatedSignIn/FederatedSignIn.mjs"],"sourcesContent":["import React__default from 'react';\nimport { FederatedIdentityProviders, authenticatorTextUtil } from '@aws-amplify/ui';\nimport { Divider } from '../../../primitives/Divider/Divider.mjs';\nimport { Flex } from '../../../primitives/Flex/Flex.mjs';\nimport { useAuthenticator } from '@aws-amplify/ui-react-core';\nimport { FederatedSignInButton } from './FederatedSignInButtons/FederatedSignInButton.mjs';\n\nconst { getSignInWithFederationText, getOrText } = authenticatorTextUtil;\nfunction FederatedSignIn() {\n    const { route, socialProviders } = useAuthenticator(({ route, socialProviders }) => [route, socialProviders]);\n    if (socialProviders.length === 0) {\n        // @ts-ignore\n        return null;\n    }\n    return (React__default.createElement(Flex, { direction: \"column\", padding: `0 0 1rem 0`, className: \"federated-sign-in-container\" },\n        socialProviders.map((provider) => {\n            switch (provider) {\n                case 'amazon':\n                    return (React__default.createElement(FederatedSignInButton, { icon: \"amazon\", key: provider, provider: FederatedIdentityProviders.Amazon, text: getSignInWithFederationText(route, provider) }));\n                case 'apple':\n                    return (React__default.createElement(FederatedSignInButton, { icon: \"apple\", key: provider, provider: FederatedIdentityProviders.Apple, text: getSignInWithFederationText(route, provider) }));\n                case 'facebook':\n                    return (React__default.createElement(FederatedSignInButton, { icon: \"facebook\", key: provider, provider: FederatedIdentityProviders.Facebook, text: getSignInWithFederationText(route, provider) }));\n                case 'google':\n                    return (React__default.createElement(FederatedSignInButton, { icon: \"google\", key: provider, provider: FederatedIdentityProviders.Google, text: getSignInWithFederationText(route, provider) }));\n                default:\n                    // eslint-disable-next-line no-console\n                    console.error(`Authenticator does not support ${provider}. Please open an issue: https://github.com/aws-amplify/amplify-ui/issues/choose`);\n            }\n        }),\n        React__default.createElement(Divider, { size: \"small\", label: getOrText() })));\n}\n\nexport { FederatedSignIn };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,0BAA0B,EAAEC,qBAAqB,QAAQ,iBAAiB;AACnF,SAASC,OAAO,QAAQ,yCAAyC;AACjE,SAASC,IAAI,QAAQ,mCAAmC;AACxD,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,qBAAqB,QAAQ,oDAAoD;AAE1F,MAAM;EAAEC,2BAA2B;EAAEC;AAAU,CAAC,GAAGN,qBAAqB;AACxE,SAASO,eAAeA,CAAA,EAAG;EACvB,MAAM;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGN,gBAAgB,CAAC,CAAC;IAAEK,KAAK;IAAEC;EAAgB,CAAC,KAAK,CAACD,KAAK,EAAEC,eAAe,CAAC,CAAC;EAC7G,IAAIA,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9B;IACA,OAAO,IAAI;EACf;EACA,OAAQZ,cAAc,CAACa,aAAa,CAACT,IAAI,EAAE;IAAEU,SAAS,EAAE,QAAQ;IAAEC,OAAO,EAAG,YAAW;IAAEC,SAAS,EAAE;EAA8B,CAAC,EAC/HL,eAAe,CAACM,GAAG,CAAEC,QAAQ,IAAK;IAC9B,QAAQA,QAAQ;MACZ,KAAK,QAAQ;QACT,OAAQlB,cAAc,CAACa,aAAa,CAACP,qBAAqB,EAAE;UAAEa,IAAI,EAAE,QAAQ;UAAEC,GAAG,EAAEF,QAAQ;UAAEA,QAAQ,EAAEjB,0BAA0B,CAACoB,MAAM;UAAEC,IAAI,EAAEf,2BAA2B,CAACG,KAAK,EAAEQ,QAAQ;QAAE,CAAC,CAAC;MACnM,KAAK,OAAO;QACR,OAAQlB,cAAc,CAACa,aAAa,CAACP,qBAAqB,EAAE;UAAEa,IAAI,EAAE,OAAO;UAAEC,GAAG,EAAEF,QAAQ;UAAEA,QAAQ,EAAEjB,0BAA0B,CAACsB,KAAK;UAAED,IAAI,EAAEf,2BAA2B,CAACG,KAAK,EAAEQ,QAAQ;QAAE,CAAC,CAAC;MACjM,KAAK,UAAU;QACX,OAAQlB,cAAc,CAACa,aAAa,CAACP,qBAAqB,EAAE;UAAEa,IAAI,EAAE,UAAU;UAAEC,GAAG,EAAEF,QAAQ;UAAEA,QAAQ,EAAEjB,0BAA0B,CAACuB,QAAQ;UAAEF,IAAI,EAAEf,2BAA2B,CAACG,KAAK,EAAEQ,QAAQ;QAAE,CAAC,CAAC;MACvM,KAAK,QAAQ;QACT,OAAQlB,cAAc,CAACa,aAAa,CAACP,qBAAqB,EAAE;UAAEa,IAAI,EAAE,QAAQ;UAAEC,GAAG,EAAEF,QAAQ;UAAEA,QAAQ,EAAEjB,0BAA0B,CAACwB,MAAM;UAAEH,IAAI,EAAEf,2BAA2B,CAACG,KAAK,EAAEQ,QAAQ;QAAE,CAAC,CAAC;MACnM;QACI;QACAQ,OAAO,CAACC,KAAK,CAAE,kCAAiCT,QAAS,iFAAgF,CAAC;IAClJ;EACJ,CAAC,CAAC,EACFlB,cAAc,CAACa,aAAa,CAACV,OAAO,EAAE;IAAEyB,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAErB,SAAS,CAAC;EAAE,CAAC,CAAC,CAAC;AACrF;AAEA,SAASC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}